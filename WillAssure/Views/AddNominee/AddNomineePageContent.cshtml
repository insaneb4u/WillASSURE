@model WillAssure.Models.NomineeModel
@{
    /**/

    ViewBag.Title = "AddNomineePageContent";
}

<h2>AddNomineePageContent</h2>

<style>
    ul#menu li {
        display: inline;
    }
</style>
@*Main Content*@
<div class="content-wrapper">
    <div class="container-fluid">


        <!-- End Breadcrumb-->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <h5>
                            <ul id="menu" style="font-weight:bold;">

                                <li>Testator ></li>
                                <li>Testator Family ></li>
                                <li>Beneficiary ></li>
                                <li>AssetInformation ></li>
                                <li>Mapping ></li>
                                <li style="color:#5e72e4">Nominee ></li>
                                <li style="color:#e1e1e1">Appointees </li>


                            </ul>
                        </h5>
                        <br />
                        <div class="col-12 12">
                            <div class="card bg-transparent shadow-none border border-light-3">
                                <div class="card-header text-white border-light-3" style="background: #199d4b">
                                    Instructions

                                </div>
                                <div class="card-body" style="background: #fff; border:1px solid #199d4b">
                                    <ul>
                                        <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</li>
                                        <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</li>
                                        <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</li>
                                        <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</li>
                                        <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</li>

                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="card-title text-primary">Add Nominee</div>


                        @using (Html.BeginForm("InsertNomineeData", null, FormMethod.Post, new { id = "NomineeForm" }))
                        {<div class="row">
                                <div class='col-sm-1'><label for='input-1' style="line-height:40px;">Testator</label></div>
                                <div class="col-sm-3">
                                    <select id='DDLTestator' onchange="getDDLTestator(this.value)" name="contentList" class='form-control'></select>







                                </div>

                            </div>

                            <hr>

                            <div class="row">
                                <div class="col-sm-6">
                                    <input type="hidden" id="txtcheck" value="" name="name" />

                                    @Html.HiddenFor(m => m.ddltid, new { id = "ddltid" })
                                    @Html.HiddenFor(m => m.ddltestatorname, new { id = "ddltestatorname" })
                                    <div class="form-group">
                                        <label for="input-1">First Name</label>
                                        <input type="hidden" id="txtcheck" value="" name="name" />
                                        @Html.TextBoxFor(m => m.First_Name, new { @class = "form-control validate[required] text-input", @id = "txtfirstname", @placeholder = "First Name", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Last Name</label>

                                        @Html.TextBoxFor(m => m.Last_Name, new { @class = "form-control validate[required] text-input", @id = "txtlastname", @placeholder = "Last Name", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>


                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Middle Name</label>

                                        @Html.TextBoxFor(m => m.Middle_Name, new { @class = "form-control validate[required] text-input", @id = "txtmiddlename", @placeholder = "Middle Name", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>


                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">DOB</label>

                                        <div id="datepicker" class="input-group date" data-date-format="dd-mm-yyyy">
                                            <input class="form-control validate[required]" type="text" id="DOB" name="DOB" autocomplete="off" placeholder="Select Date Of Birth" />
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Mobile</label>

                                        @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control required validate[required,custom[Mobile],maxSize[10]]", @id = "txtmobile", @placeholder = "Enter Mobile", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Relationship</label>

                                        <select id="ddlrelation" class="form-control validate[required]">
                                            <option value="">--Select--</option>
                                        </select>
                                        @Html.HiddenFor(m => m.RelationshipId, new { id = "RelationshipId" })
                                        @Html.HiddenFor(m => m.RelationshipTxt, new { id = "RelationshipTxt" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Marital Status</label>

                                        @Html.DropDownListFor(x => x.Marital_Status, new SelectListItem[]{
                                            new SelectListItem() {Text = "--Select--", Value=""},
                                           new SelectListItem() {Text = "Married", Value="Married"},
                                            new SelectListItem() {Text = "UnMarried", Value="UnMarried"}}, new { @class = "form-control validate[required]" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Religion</label>

                                        @Html.DropDownListFor(x => x.Religion, new SelectListItem[]{
                                     new SelectListItem() {Text = "--Select--", Value=""},
                                     new SelectListItem() {Text = "Buddhism", Value="Buddhism"},
                                     new SelectListItem() {Text = "Christians", Value="Christians"},
                                     new SelectListItem() {Text = "Hinduism", Value="Hinduism"},
                                     new SelectListItem() {Text = "Islam", Value="Islam"},
                                     new SelectListItem() {Text = "Jainism", Value="Jainism"},
                                     new SelectListItem() {Text = "Sikhism", Value="Sikhism"},
                                     new SelectListItem() {Text = "Zoroastrian", Value="Zoroastrian"},
                                     new SelectListItem() {Text = "Guru Nanak Dev", Value="Guru Nanak Dev"},
                                     new SelectListItem() {Text = "Lord Mahavira", Value="Lord Mahavira"},
                                     new SelectListItem() {Text = "Adi Shankaracharya", Value="Adi Shankaracharya"}}, new { @class = "form-control validate[required]" })

                                    </div>
                                </div>


                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Identity Proof</label>
                                        @Html.DropDownListFor(x => x.Identity_Proof, new SelectListItem[]{
                                   new SelectListItem() {Text = "--Select Identity Proof--", Value=""},
                                   new SelectListItem() {Text = "Aadhaar Card", Value="Aadhaar Card"},
                                   new SelectListItem() {Text = "Passport", Value="Passport"},
                                   new SelectListItem() {Text = "Driving Licences", Value="Driving Licences"},
                                   new SelectListItem() {Text = "Pan Card", Value="Pan Card"}} , new { @class= "form-control validate[required]", @onchange= "getIdentityselection(this.options[this.selectedIndex].innerHTML)" })

                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Identity Proof Number</label>
                                        <div id="appendtxt">  @Html.TextBoxFor(m => m.Identity_Proof_Value, new { @class = "form-control validate[required] text-input", @id = "txtidentityproof", @placeholder = "Enter Aadhaar Card", @autocomplete = "off" })</div>


                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Alt Identity Proof</label>
                                        @Html.DropDownListFor(x => x.Identity_Proof, new SelectListItem[]{
                                   new SelectListItem() {Text = "--Select Identity Proof--", Value=""},
                                   new SelectListItem() {Text = "Aadhaar Card", Value="Aadhaar Card"},
                                   new SelectListItem() {Text = "Passport", Value="Passport"},
                                   new SelectListItem() {Text = "Driving Licences", Value="Driving Licences"},
                                   new SelectListItem() {Text = "Pan Card", Value="Pan Card"}}, new { @class= "form-control ", @id="ddlidentityproof" , @onchange= "getAltIdentityselection(this.options[this.selectedIndex].innerHTML)" })

                                        @Html.HiddenFor(m => m.Alt_Identity_Proof, new { id = "Alt_Identity_Proof" })
                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Alt Identity ProofNumber</label>
                                        <div id="appendtxt2">  </div>

                                        @*@Html.TextBoxFor(m => m.Identity_Proof_Value, new { @class = "form-control validate[required] text-input", @id = "txtIdentityProofValue", @placeholder = "Enter Identity Proof Value", @autocomplete = "off" })*@
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Address 1</label>

                                        @Html.TextAreaFor(m => m.Address1, new { @class = "form-control validate[required] text-input", @id = "txtaddress1", @placeholder = "Enter Address 1", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Address 2</label>

                                        @Html.TextAreaFor(m => m.Address2, new { @class = "form-control  text-input", @id = "txtaddress2", @placeholder = "Enter Address 2", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Address 3</label>

                                        @Html.TextAreaFor(m => m.Address3, new { @class = "form-control  text-input", @id = "txtaddress3", @placeholder = "Enter Address 3", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">State</label>

                                        <select id="ddlstate" class="form-control validate[required]">
                                            <option value="">--Select State--</option>
                                        </select>
                                        @Html.HiddenFor(m => m.stateid, new { id = "stateid" })
                                        @Html.HiddenFor(m => m.statetext, new { id = "statetext" })
                                    </div>
                                </div>

                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">City</label>
                                        <select id="ddlcity" class="form-control validate[required]">
                                            <option value="">--Select City--</option>
                                        </select>
                                        @Html.HiddenFor(m => m.cityid, new { id = "cityid" })
                                        @Html.HiddenFor(m => m.citytext, new { id = "citytext" })
                                    </div>
                                </div>
                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Pin</label>

                                        @Html.TextBoxFor(m => m.Pin, new { @class = "form-control required validate[required,custom[integer],maxSize[6]]", @id = "txtpin", @placeholder = "Enter Pin", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>



                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Description of Assets</label>

                                        @Html.TextAreaFor(m => m.Description_of_Assets, new { @class = "form-control validate[required] text-input", @id = "txtdescriptionofasset", @placeholder = "Enter Description of Assets", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>





                            </div>



                            <div class="form-group">

                                <button type="submit" id="btnRoleformsubmit" class="btn btn-primary shadow-primary px-5"><i class="icon-lock"></i> Add Nominee</button>
                            </div>

                        }
                    </div>
                </div>
            </div>


        </div>


    </div>


</div>



<button type="button" id="btnnomineeinsertsuccess" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
<button type="button" id="btnnomineelinking" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
<button type="button" id="btncheckExists" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
<button type="button" style="display:none" id="confirmtestatorfamily"></button>


<script>


          $(document).ready(function () {

            $.ajax({

                type: "POST",
                url:"@Url.Action("BindStateDDL", "AddNominee")",
                success: function (data) {
                    $('#ddlstate').empty().append(data);
                }
              });







        });



    $("#ddlstate").change(function () {
        var value = $(this).children(":selected").attr("value");
        var text = $("#ddlstate option:selected").html();

        $("#statetext").val(text);
        $("#stateid").val(value);



        $.ajax({

            type: "POST",
            url: "@Url.Action("OnChangeBindCity", "AddNominee")",
            data: { "send": "" + value+  ""},
            success: function (data) {

                $('#ddlcity').empty().append(data);
            }



        });





    });
</script>

@*validation script*@
<script>
    function getIdentityselection(id) {
        if (id == "Aadhaar Card") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[adharCard]] text-input' id='Identity_Proof_Value' name='Identity_Proof_Value' placeholder='Enter Aadhaar Card' autocomplete='off'  />");
        }


        if (id == "Passport") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[Passport]] text-input' id='Identity_Proof_Value' name='Identity_Proof_Value'  placeholder='Enter Passport Number' autocomplete='off'  />");
        }



        if (id == "Driving Licences") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[carnumber]]  text-input' id='Identity_Proof_Value' name='Identity_Proof_Value' placeholder='Enter Driving Licences' autocomplete='off'  />");
        }



        if (id == "Pan Card") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[pannumber]]  text-input' id='Identity_Proof_Value' name='Identity_Proof_Value' placeholder='Enter Pan Card' autocomplete='off'  />");
        }


    }
</script>


<script>
    function getAltIdentityselection(id) {

        $("#Alt_Identity_Proof").val(id);


        if (id == "Aadhaar Card") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[adharCard]] text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value' placeholder='Enter Aadhaar Card' autocomplete='off'  />");
        }


        if (id == "Passport") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[Passport]] text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value'  placeholder='Enter Passport Number' autocomplete='off'  />");
        }



        if (id == "Driving Licences") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[carnumber]] text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value' placeholder='Enter Driving Licences' autocomplete='off'  />");
        }



        if (id == "Pan Card") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[pannumber]]  text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value' placeholder='Enter Pan Card' autocomplete='off'  />");
        }


    }
</script>




<script>
    $("#ddlcity").change(function () {
        var value = $(this).children(":selected").attr("value");
        var text = $("#ddlcity option:selected").html();

        $("#citytext").val(text);
        $("#cityid").val(value);
    });
</script>

<script>
    $(document).ready(function () {
        $("#NomineeForm").validationEngine();
    });
</script>
@*end*@


<script>

    $(document).ready(function () {

        $.ajax({

            type: "POST",
            url:"@Url.Action("BindRelationDDL", "AddNominee")",
            success: function (data) {
                $('#ddlrelation').empty().append(data);
            }
        });


            $.ajax({

            type: "POST",
            url:"@Url.Action("BindTestatorDDL", "AddNominee")",
                  success: function (data) {
                      var splitted = data.split("~"); 
                      $("#DDLTestator").append(splitted[0]); 
                      $("#ddltid").val(splitted[1]);
                      var pop = splitted[2];
                      //$('#DDLTestator').append(data);
                      if (pop == "true") {

                          $("#confirmtestatorfamily").on("click", function () { });

                          $("#confirmtestatorfamily").click(); //trigger event after listening to it.
                      }

                     



            }
          });



    });


        $("#ddlrelation").change(function () {
            var value = $(this).children(":selected").attr("value");
            var text = $("#ddlrelation option:selected").html();

            $("#RelationshipTxt").val(text);
            $("#RelationshipId").val(value);


        });

</script>






@if (ViewBag.Message == "Verified")
{
    <script>

        $(document).ready(function () {


            $("#btnnomineeinsertsuccess").on("click", function () { });

            $("#btnnomineeinsertsuccess").click(); //trigger event after listening to it.




        });
    </script>

}



@if (ViewBag.Message == "link")
{
    <script>

        $(document).ready(function () {


            $("#btnnomineelinking").on("click", function () { });

            $("#btnnomineelinking").click(); //trigger event after listening to it.




        });
    </script>

}

<script>

      function getDDLTestator(value) {
        //var value = $(this).children(":selected").attr("value");
        var text = $("#DDLTestator option:selected").html();





        $("#ddltestatorname").val(text);
        $("#ddltid").val(value);
        var checkstatus =  $("#txtcheck").val();

             $.ajax({

            type: "POST",
            url:"@Url.Action("CheckTestatorUsers", "AddNominee")",
                 data: { value: value, checkstatus: checkstatus },
            success: function (data) {

                if (data == 2) {
                    $("#confirmtestatorfamily").on("click", function () { });

                    $("#confirmtestatorfamily").click(); //trigger event after listening to it.




                }







            }
        });





    };




    $('.radio').on('change', function () {
        if (!$(this).is(':checked')) {
            $('.radio').prop('checked', false);
            $("#txtcheck").val("false");

        } else {
            $('.radio').prop('checked', true);
            $("#txtcheck").val("true");
        }
    });
</script>





<script>
    $("#confirmtestatorfamily").click(function () {

        swal({

            text: 'Testator Data Already Exists Do You Want To Add More!',
            icon: 'warning',
            buttons: true,
            dangerMode: true,
            buttons: ['No', 'Yes']
        })
            .then((willDelete) => {
                if (willDelete) {



                } else {





                    var url = "/AddAppointees/AddAppointeesIndex/";
                    window.location.href = url;




                }
            });

    });


</script>





