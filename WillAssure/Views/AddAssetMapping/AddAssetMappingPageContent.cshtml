﻿﻿﻿@model WillAssure.Models.AssetMappingModel
@{
    ViewBag.Title = "AddAssetMappingPageContent";
}
<style>


    ul#menu li {
        display: inline;
    }
</style>

@*Main Content*@
<div class="content-wrapper">
    <div class="container-fluid">
        <div class="row pt-2 pb-2">
            <div class="col-sm-3">
                <div class="btn-group float-sm-right">
                    <div class="dropdown-menu">
                        <a href="javaScript:void();" class="dropdown-item">Action</a>
                        <a href="javaScript:void();" class="dropdown-item">Another action</a>
                        <a href="javaScript:void();" class="dropdown-item">Something else here</a>
                        <div class="dropdown-divider"></div>
                        <a href="javaScript:void();" class="dropdown-item">Separated link</a>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Breadcrumb-->
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RoleForm" }))
        {

            @Html.HiddenFor(m => m.Beneficiaryid, new { id = "Beneficiaryid" })
            @Html.HiddenFor(m => m.Beneficiarytxt, new { id = "Beneficiarytxt" })

            @Html.HiddenFor(m => m.InstrumentId, new { id = "InstrumentId" })
            @Html.HiddenFor(m => m.Instrumenttxt, new { id = "Instrumenttxt" })
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">

                            @if (Session["doctype"] != null)
                            {
                                if (Session["doctype"].ToString() != "")
                                {
                                    <h5 style="float:right; color:#199d4b;">DocumentType  : <span class="icon-doc" style="color:#199d4b;"><b>@Session["doctype"].ToString()</b></span> </h5>
                                }
                            }
                            else
                            {
                                if (!Response.IsRequestBeingRedirected)
                                {
                                    Response.Redirect("/LoginPage/LoginPageIndex");
                                }
                            }






                            @if (Session["WillType"] != null || Session["testatorID"] != null)
                            {
                                if (Session["WillType"].ToString() == "Quick" && Session["doctype"].ToString() == "Will" )
                                {
                                    <h5>
                                        <ul id="menu" style="font-weight:bold;">
                                            <a href="@Url.Action("UpdateTestatorsIndex","UpdateTestators" , new { NestId = Convert.ToInt32(Session["testatorID"]) })"><li style="color:black;">Testator></li></a>
                                            <a href="@Url.Action("AddTestatorFamilyIndex","AddTestatorFamily")"> <li style="color:black;">TestatorFamily ></li></a>
                                            <a href="@Url.Action("AddBeneficiaryInstituteIndex","AddBeneficiaryInstitute")">
                                                <li style="color:black;">Institution ></li>
                                            </a>
                                            <a href="@Url.Action("AddBeneficiaryIndex","AddBeneficiary")"><li style="color:black;">Beneficiary ></li></a>


                                            <a href="@Url.Action("AddAppointeesIndex","AddAppointees")">    <li style="color:black">Executor ></li></a>
                                            <a href="@Url.Action("AddwitnessIndex", "Addwitness")">
                                                <li style="color:black">Witness > </li>
                                            </a>

                                            <a href="@Url.Action("AddAssetMappingIndex", "AddAssetMapping")">
                                                <li style="">Mapping</li>
                                            </a>


                                        </ul>
                                    </h5>
                                }
                                else
                                {
                                    if (Session["doctype"] != null || Session["testatorID"] != null)
                                    {
                                        if (Session["doctype"].ToString() == "POA" || Session["doctype"].ToString() == "GiftDeeds")
                                        {
                                            <h5>
                                                <ul id="menu" style="font-weight:bold;">
                                                    <a href="@Url.Action("UpdateTestatorsIndex","UpdateTestators" , new { NestId = Convert.ToInt32(Session["testatorID"]) })"><li style="color:black;">Donor ></li></a>
                                                    <a href="@Url.Action("AddBeneficiaryIndex", "AddBeneficiary")"><li style="color:black">Donee ></li></a>
                                                    <a href="@Url.Action("AddMainAssetsIndex", "AddMainAssets")"><li style="color:black">Gift ></li></a>
                                                    <a href="@Url.Action("AddAssetMappingIndex", "AddAssetMapping")">
                                                        <li style="color:">Asset Mapping ></li>
                                                    </a>
                                                    <li style="color:#e1e1e1">Witness Appointment ></li>
                                                    <li style="color:#e1e1e1">Document</li>
                                                </ul>
                                            </h5>
                                        }
                                        else
                                        {
                                            if (Session["Type"].ToString() != "Testator")
                                            {
                                                <h5>
                                                    <ul id="menu" style="font-weight:bold;">
                                                        <a href="@Url.Action("UpdateTestatorsIndex", "UpdateTestators", new { NestId = Convert.ToInt32(Session["testatorID"]) })"><li style="color:black;">Testator></li></a>
                                                        <a href="@Url.Action("AddTestatorFamilyIndex", "AddTestatorFamily")"><li style="color:black;">Testator Family ></li></a>
                                                        <a href="@Url.Action("AddBeneficiaryInstituteIndex","AddBeneficiaryInstitute")">
                                                            <li style="color:black;">Institution ></li>
                                                        </a>
                                                        <a href="@Url.Action("AddBeneficiaryIndex", "AddBeneficiary")"><li style="color:black;">Beneficiary ></li></a>
                                                        <a href="@Url.Action("AddMainAssetsIndex", "AddMainAssets")"><li style="color:black;">AssetInformation ></li></a>
                                                        <a href="@Url.Action("AddLiabilitiesIndex", "AddLiabilities")"><li style="color:black;">Liabilites></li></a>
                                                        <a href="@Url.Action("AddPetCareIndex", "AddPetCare")"><li style="color:black;">PetCare ></li></a>
                                                        <a href="@Url.Action("AddAssetMappingIndex", "AddAssetMapping")"><li style="">Mapping ></li></a>

                                                        <li style="color:#e1e1e1">Executor > </li>
                                                        <li style="color:#e1e1e1">Witness > </li>
                                                        <li style="color:#e1e1e1">Document</li>
                                                    </ul>
                                                </h5>
                                            }
                                            else
                                            {
                                                <h5>
                                                    <ul id="menu" style="font-weight:bold;">
                                                        <a href="@Url.Action("UpdateTestatorsIndex", "UpdateTestators", new { NestId = Convert.ToInt32(Session["testatorID"]) })"><li style="color:black;">Testator></li></a>
                                                        <a href="@Url.Action("AddTestatorFamilyIndex", "AddTestatorFamily")"><li style="color:black;">Testator Family ></li></a>
                                                        <a href="@Url.Action("AddBeneficiaryInstituteIndex","AddBeneficiaryInstitute")">
                                                            <li style="color:black;">Institution ></li>
                                                        </a>
                                                        <a href="@Url.Action("AddBeneficiaryIndex", "AddBeneficiary")"><li style="color:black;">Beneficiary ></li></a>
                                                        <a href="@Url.Action("AddMainAssetsIndex", "AddMainAssets")"><li style="color:black;">AssetInformation ></li></a>
                                                        <a href="@Url.Action("AddLiabilitiesIndex", "AddLiabilities")"><li style="color:black;">Liabilites></li></a>
                                                        <a href="@Url.Action("AddPetCareIndex", "AddPetCare")"><li style="color:black;">PetCare ></li></a>
                                                        <a href="@Url.Action("AddAssetMappingIndex", "AddAssetMapping")"><li style="">Mapping ></li></a>

                                                        <li style="color:#e1e1e1">Executor > </li>
                                                        <li style="color:#e1e1e1">Witness > </li>
                                                        <li style="color:#e1e1e1">Document</li>
                                                    </ul>
                                                </h5>
                                            }

                                        }
                                    }
                                    else
                                    {
                                        if (!Response.IsRequestBeingRedirected)
                                        {
                                            Response.Redirect("/LoginPage/LoginPageIndex");
                                        }
                                    }
                                }

                            }
                            else
                            {
                                if (!Response.IsRequestBeingRedirected)
                                {
                                    Response.Redirect("/LoginPage/LoginPageIndex");
                                }
                            }






                            <br>


                            <div class="row">
                                <div class='col-sm-1'><label for='input-1' style="line-height:40px;">Testator <span id='errproportion' style='color:red;display:;'>(*)</span></label></div>
                                <div class="col-sm-3">

                                    <input type="text" readonly="true" name="ddltestatorname" class="form-control" value="@Session["disttestator"].ToString()" />
                                    <input type="hidden" id="tid" name="ddltid" value="@Session["distid"].ToString()" />



                                    <input type="hidden" id="txtcount" name="name" value="" />
                                </div>
                                <div class="col-sm-6"><button type="button" style="display:none;" id="btnfieldedit" class="btn btn-primary shadow-primary px-5">Enable Details</button><button type="button" style="display:none;" id="btnfieldedit1" class="btn btn-primary shadow-primary px-5">Disable Details</button><a href="@Url.Action("EditBeneficiaryMappingIndex", "EditBeneficiaryMapping")"><input type="button" id="btnview" name="name" value="View" class="btn btn-success" /></a></div>



                            </div>
                            @*<div class="row">






            <input type="hidden" id="txtcheck" value="" name="name" />

            <div class='col-sm-6'>
                <div class='form-group'>
                    <label for='input-1'>Assets Type</label>
                    <select id='ddlassettype' name="contentList" onChange='getassettypeid(this.value)' class='form-control'></select>
                    @Html.HiddenFor(m => m.assettypeid, new { id = "assettypeid" })
                    @Html.HiddenFor(m => m.assettypetext, new { id = "assettypetext" })
                </div>
            </div>

            <div class='col-sm-6'>
                <div class='form-group'>
                    <label for='input-1'>Assets Category</label>
                    <select id='ddlassetcat' name="contentList" onChange='getassetcatid(this.value)' class='form-control'><option value="">--Select--</option></select>
                    @Html.HiddenFor(m => m.assetcatid, new { id = "assetcatid" })
                    @Html.HiddenFor(m => m.assetcattext, new { id = "assetcattext" })
                </div>
            </div>
        </div>*@
                            @*<div class='col-sm-3' id="type" style="display:none;">
            <div class='form-group'>
                <label for='input-1'>Type</label>
                <br />
                <form>
                    <label class="radio-inline">
                        <input type="radio" onchange="getvalone(this.value)" name="optradio" value="Single" checked>Single
                    </label>
                    <label class="radio-inline">
                        <input type="radio" onchange="getvaltwo(this.value)" name="optradio" value="Multiple">Multiple
                    </label>
                </form>
            </div>
        </div>*@
                            <hr>
                            <input type='hidden' id='txttotalval' name='name' value='100' />


                            <input type='hidden' id='assettypeidforliablities' name='name' value='@Session["assettypeidforliablities"]' />




                            <input type='hidden' id='assetcategoryidforliablities' name='name' value='@Session["assetcategoryidforliablities"]' />




                            <input type='hidden' id='totalliablities' name='name' value='@Session["totalliablities"]' />



                            <input type='hidden' id='assettypeidforpetcare' name='name' value='@Session["assettypeidforpetcare"]' />



                            <input type='hidden' id='assetcategoryidforpetcare' name='name' value='@Session["assetcategoryidforpetcare"]' />




                            <input type='hidden' id='totalpetcare' name='name' value='@Session["totalpetcare"]' />



                            <div id="lastsinglefinancialrecords">



                            </div>

                            <div id="lastmultiplefinancialrecords">



                            </div>



                            <div id="lastsinglenonfinancialrecords">


                            </div>




                            <div id="lastmultiplenonfinancialrecords">


                            </div>


                            <!--End Row-->
                            @*<center style="display:none" id="financialtitle"><h6 style="color:green;" class='text-uppercase'>(Completed Financial Assets)</h6></center>


        <br />
        <center style="display:none" id="nonfinancialtitle"><h6 style="color:green;" class='text-uppercase'>(Completed Non Financial Assets)</h6></center>
        <div id="lastnonfinancialrecords" class="row" style="border:2px solid #ca1136; padding:20px">



        </div>*@

                            <br />
                            <br />
                            <br />

                            <div class="row">






                                <div class="col-lg-12">
                                    <form>
                                        <div id="accordion8">



                                        </div>
                                    </form>
                                </div>
                            </div>


                            @if (Session["doctype"] != null)
                            {
                                if (Session["doctype"].ToString() == "POA" || Session["doctype"].ToString() == "GiftDeeds")
                                {
                                    <div class="form-group" style="float:right">
                                        <a href="@Url.Action("AddwitnessIndex", "Addwitness")"><button type="button" style="display:;" id="btnnext" class="btn btn-success shadow-primary px-5">Next&nbsp;&nbsp;<i class="icon-arrow-right-circle"></i></button></a>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group" style="float:right">
                                        <a href="@Url.Action("AddAppointeesIndex", "AddAppointees")"><button type="button" style="display:;" id="btnnext" class="btn btn-success shadow-primary px-5">Next&nbsp;&nbsp;<i class="icon-arrow-right-circle"></i></button></a>
                                    </div>
                                }
                            }
                            else
                            {
                                if (!Response.IsRequestBeingRedirected)
                                {
                                    Response.Redirect("/LoginPage/LoginPageIndex");
                                }
                            }


                            @*<div class="card-body" id="fetchdata">
            <div class='col-sm-3' id="type">
                <div class='form-group'>
                    <label for='input-1'>Type</label>
                    <br />
                    <form>
                        <label class="radio-inline">
                            <input type="radio" onchange="getvalone(this.value)" name="optradio" value="Single" checked>Single
                        </label>
                        <label class="radio-inline">
                            <input type="radio" onchange="getvaltwo(this.value)" name="optradio" value="Multiple">Multiple
                        </label>
                    </form>
                </div>
            </div>
            <div id="parentdiv">
                <div class="row rowdiv" id="beneficiarydetails" style="display:;">


                    <div class='col-sm-2'>
                        <div class='form-group'>
                            <label for='input-1'>Beneficiary</label>
                            <select id='ddlbeneficiary1' onchange="checkbeneficiaryduplicate(this.id)" name="contentList" class='form-control beneficiaryclass'></select>
                            @Html.HiddenFor(m => m.Beneficiaryid, new { id = "Beneficiaryid" })
                            @Html.HiddenFor(m => m.Beneficiarytxt, new { id = "Beneficiarytxt" })

                            <input type="text" class="form-control" style="display:none" id="ddlbeneficiarytxt" name="name" value="" />
                        </div>
                    </div>
                    <div class='col-sm-2'><div class='form-group' id="getidentifier"></div></div>
                    <div class='col-sm-3'>
                        <label for='input-1'>Instruments</label>
                        <select id='DDLAssetColumn1' onchange="getDDLAssetColumn(this.id)" name="contentList" class='form-control instrumentclass'></select>
                        @Html.HiddenFor(m => m.InstrumentId, new { id = "InstrumentId" })
                        @Html.HiddenFor(m => m.Instrumenttxt, new { id = "Instrumenttxt" })
                    </div>
                    <div class='col-sm-2 grandparent'>
                        <div class='form-group parent'>
                            <label for='input-1'>Proportion</label>
                            <input type='text' class='form-control proportioninput' onkeypress="return isNumberKey(event)" onchange="gettxtproportion(this.value)" name="rank" id="txtproportion" />
                        </div>
                    </div>
                    <div class='col-sm-2'>
                        <div class='form-group start'>
                            <label for='input-1'>Total</label>
                            <input type='text' id="txttotal" class='form-control totalinput' readonly />
                            <input type="hidden" id="txttotalval" name="name" value="" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" id="btnmappingsubmit" class="btn btn-primary shadow-primary px-5"><i class="icon-lock"></i>Submit</button>
                <button type="button" id="btnadd" style="display:none;" class="btn btn-danger shadow-primary px-5"><i class="icon-lock"></i>Add</button>


            </div>

        </div>*@

                                    <input type="text" id="checkaltbenestatus" name="checkaltbenestatus" value="" />
                            <textarea id="query" style="display:none;" class="form-control">
                               
                           </textarea>
                        </div>
                    </div>
                </div>
            </div>


        }
        <button type="button" id="btnmainassetsuccess" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
        <button type="button" id="btncheckExists" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
        @*<button type="button" style="display:none" id="confirmtestatorfamily"></button>*@
    </div>
    @*end*@
    <script>
        $(document).ready(function () {
            $("#RoleForm").validationEngine();


        });
    </script>
    <script>



        $(document).ready(function () {




            



              $.ajax({

                type: "POST",

                url: "@Url.Action("BindLastSingleFinancialRecords", "AddAssetMapping")",
                success: function (data) {
                    $("#financialtitle").show();
                    $("#lastsinglefinancialrecords").empty().append(data);

                            }      
            });






                   $.ajax({

                type: "POST",

                url: "@Url.Action("BindLastMultipleFinancialRecords", "AddAssetMapping")",
                success: function (data) {
                    $("#financialtitle").show();
                    $("#lastmultiplefinancialrecords").append(data);

                            }      
            });




            $.ajax({

                type: "POST",

                url: "@Url.Action("BindLastSingleNonFinancialRecords", "AddAssetMapping")",
                success: function (data) {

                    $("#nonfinancialtitle").show();
                    $("#lastsinglenonfinancialrecords").empty().append(data);

                    

                            }      
            });








                  $.ajax({

                type: "POST",

                url: "@Url.Action("BindLastMultipleNonFinancialRecords", "AddAssetMapping")",
                success: function (data) {
                    $("#financialtitle").show();
                    $("#lastmultiplenonfinancialrecords").append(data);

                            }      
            });















                 $.ajax({

                type: "POST",

                 url: "@Url.Action("bindassetcatDDL", "AddAssetMapping")",

                     success: function (response1) {
                      
                         //console.log(JSON.stringify(data));
                         var totalval = 100;
                         var response = groupArrayMain(response1, "atId", "AssetsType");
                      //   console.log(JSON.stringify(response));
                        //return false;
                         for (var j = 0; j < response.length; j++) {
                             var assettypeid = response[j].atId;
                             var AssetsType = response[j].atId_group[0].AssetsType;

                             var atId_group = response[j].atId_group[0].AssetsType_group;
                             var data = atId_group;



                             //   console.log(JSON.stringify(atId_group));
                             var assettypehtmlelem = "<h6 class='text-uppercase'>" + AssetsType + "</h6><hr>";
                             $("#accordion8").append(assettypehtmlelem);
                             var beneficiarycontent = "";
                             for (var i = 0; i < atId_group.length; i++) {
                                 var htmlcontent = data[i].htmlcontent;
                                  beneficiarycontent = data[i].DDLbeneficiarycontent;

                                 var liability_proportion = petcare_proportion = total_liability_petcare_proportion =0;
                                 if (parseInt($("#assetcategoryidforliablities").val()) == parseInt(data[i].assetcatid)) {

                                     var liabilitiesid = $("#totalliablities").val();

                                     //var cal = parseInt(totalval) - parseInt(liabilitiesid);
                                     var cal = parseInt(liabilitiesid);
                                     liability_proportion = cal;
                                     // $("#tempone").val(cal);

                                 }
                                 if ($("#assetcategoryidforliablities").val() == "") {
                                     //skip value for liabilities
                                     liability_proportion = 100;
                                     // $("#tempone").val(totalval);

                                 }


                                 if (parseInt($("#assetcategoryidforpetcare").val()) == parseInt(data[i].assetcatid)) {
                                     var petcareid = $("#totalpetcare").val();

                                     //var cal = parseInt(totalval) - parseInt(petcareid);
                                     var cal = parseInt(petcareid);
                                     petcare_proportion = cal;
                                 }
                                 if ($("#assetcategoryidforpetcare").val() == "") {
                                     //skip value for petcare
                                     petcare_proportion = 100;

                                 }
                                 console.log(liability_proportion + '=' + petcare_proportion);
                                 if (parseInt(liability_proportion) == 0 && parseInt(petcare_proportion) == 0) {
                                     total_liability_petcare_proportion = 0;

                                 } else {
                                     if (parseInt(liability_proportion) == 100 && parseInt(petcare_proportion) == 100) {
                                         total_liability_petcare_proportion = parseInt(totalval);   // 100
                                     } else if (parseInt(liability_proportion) != 100 && parseInt(petcare_proportion) == 100) {
                                         total_liability_petcare_proportion = parseInt(totalval) - parseInt(liability_proportion);   // 100
                                     } else if (parseInt(liability_proportion) == 100 && parseInt(petcare_proportion) != 100) {
                                         total_liability_petcare_proportion = parseInt(totalval) - parseInt(petcare_proportion);   // 100
                                     } else {
                                         total_liability_petcare_proportion = parseInt(totalval) - (parseInt(liability_proportion) + parseInt(petcare_proportion));   // (parseInt(liability_proportion) + parseInt(petcare_proportion));
                                     }
                                 }

                                 var res = "";
                             
                                 res += "<div class='card mb-2 border border-danger' id='accparent'>";

                                 res += "<div class='card-header'>";
                                 res += "<button type='button' class='btn btn-link shadow-none text-danger collapsed' data-toggle='collapse' data-target='#accordio" + data[i].assetcatid + "' aria-expanded='false' aria-controls='collapse-23'>";
                                 res += data[i].AssetsCategory + data[i].assetcatid;
                                 res += "<input type='text' style='display:none;' id='txtassetcat" + data[i].assetcatid +"' name='txtassetcat'  value='"+data[i].AssetsCategory+"' class='form-control' />";
                                 res += "</button>";
                                 res += "</div>";
                                 res += "<div id='accordio" + data[i].assetcatid + "' class='collapse  accordiondiv' data-parent='#accordion8'>";
                                

                                 res += "<div class='card-body'>";
                                 res += "<div id='main-body"+data[i].assetcatid+"'>";
                                 res += htmlcontent;
                                 res += "<input type='hidden' id='liability_proportion_" + data[i].assetcatid + " ' name='name' value='" + liability_proportion + "' />";
                                 res += "<input type='hidden' id='petcare_proportion_" + data[i].assetcatid + "' name='name' value='" + petcare_proportion + "' />";
                                 res += "<input type='hidden' class='total_liability_petcare_proportion' id='total_liability_petcare_proportion_" + data[i].assetcatid + "' name='name' value='" + total_liability_petcare_proportion + "' />";
                                 res += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class='col-sm-3' id='type" + data[i].assetcatid + "'>";
                               
                                 res += "<div class='form-group'>";
                                 res += "<label for='input-1'>Type</label>";
                                 res += "<br />";
                                 //res += "<form id='testatorform'>";
                                 res += "<label class='radio-inline'>";
                                 res += "<input type='radio' id='getvalone' class=" + data[i].assetcatid + " name='optradio' value='Single' checked>Single";
                                 res += "</label>";
                                 res += "<label class='radio-inline'>";
                                 res += "<input type='radio' id='getvaltwo' class=" + data[i].assetcatid + " name='optradio' value='Multiple'>Multiple";
                                 res += "</label>";
                                 //res += "</form>";
                                 res += "</div>";
                                 res += "</div>";
                                 res += "<div id='parentdiv" + data[i].assetcatid + "'  class='test'>";
                                 res += "<div class='row rowdiv' id='beneficiarydetails' >";

                                 res += "&nbsp;&nbsp;&nbsp;&nbsp;";
                                 res += "<div class='col-sm-2'>";
                                 res += "<div class='form-group' id='mainbeneddl" + data[i].assetcatid+"'>";
                                 res += "<label for='input-1'>Beneficiary</label><span id='errbene'  style='color:red; display:;'>(*)</span>";
                                 res += "<select id='ddlbeneficiary" + data[i].assetcatid + "' onchange='checkbeneficiaryduplicate(this.id,this.value)' name='multiproportion' class='form-control beneficiaryclass validate[required]'></select>";
                                 res += "<input type='text' class='form-control' style='display: none' id='ddlbeneficiarytxt' name='name' value='' />";
                                 res += "</div>";
                                 res += "</div>";  
                                 
                                 res += "<div class='col-sm-2 grandparent'>";
                                 res += "<div class='form-group parent'>";
                                 res += "<label for='input-1'>Proportion</label><span id='errproportion' style='color:red;display:;'>(*)</span>";
                                 res += "<input type='text' autocomplete='off' class='form-control proportioninput validate[required]'  onkeypress='return isNumberKey(event)'   onchange='gettxtproportion(this.id,this.value)' name='multiproportion' id='txtproportion" + data[i].assetcatid + "' />";
                                 res += "</div>";
                                 res += "</div>";
                                 res += "<div class='col-sm-2' id='totaldiv"+data[i].assetcatid+"'>";
                                 res += "<div class='form-group start'>";
                                 res += "<label for='input-1'>Balance Proportion</label>";
                                 res += "<input type='text' id='txttotal"+data[i].assetcatid+"' min=0  class='form-control totalinput' readonly />";
                                 res += "<button type='button' id='btnremove' style='position:relative; top:-39px; right:-638px;'  value='" + data[i].assetcatid + "' style='display:;'    class='btn btn-danger  btnremove'><i class='icon-trash'></i></button>";
              
                                 res += "</div>";
                                 res += "</div>";
                                 res += "</br>";

                                 res += "<div class='col-md-8 alternaterow'>";
                                 res += "<table class='table tblalternaterow'>";
                                 res += "<tr>";

                                 res += "<td><button type='button' id='alternatebtn' class='btn btn-sm btn-success'>Add Alternate Beneficiary</button></td>";
                                 res += "<td id='field1' style='display:none'><select name='alt_proportion' onchange='checkaltbeneficiaryduplicate(this.id)' id='alt_beneficiary1' class='form-control altbeneficiaryclass'></select></td>";
                                 res += "<td id='field2' style='display:none'><input type='text' name='alt_proportion' id='alt_proportion1' class='form-control'></td>";
                                 res += "<td id='field3' style='display:none'><input type='text' name='alt_total' id='alt_total' class='form-control alt_total'></td>";
                                 res += "<td id='field4' style='display:none'><button type='button' class='btn btn-sm btn-success btnaddalternate'>Add</button></td>";
                                 res += "</tr>";
                                 res += "</table>";
                                 res += "</div>";
                                 

                                 res += "<div class='col-sm-2' id='alternatefield' style='display:none'>";
                                 res += "<div class='form-group' id='mainbeneddl" + data[i].assetcatid + "'>";
                                 res += "<label for='input-1' style='white-space:nowrap'>Alternate Beneficiary</label>";
                                 res += "<select id='ddlbeneficiaryalt" + data[i].assetcatid + "' onchange='altcheckbeneficiaryduplicate(this.id,this.value)' name='contentList' class='form-control altbeneficiaryclass '></select>";
                                 res += "<input type='text' class='form-control' style='display: none' id='ddlbeneficiarytxt' name='name' value='' />";
                                 res += "</div>";
                                 res += "</div>";  



                                 res += "<div class='col-sm-2 grandparent' id='alternatefield' style='display:none'>";
                                 res += "<div class='form-group parent' id='alternatefield' style='display:none'>";
                                 res += "<label for='input-1'>Alt Proportion</label><span id='errproportion' style='color:red;display:;'>(*)</span>";
                                 res += "<input type='text' autocomplete='off' class='form-control proportioninput validate[required]'  onkeypress='return isNumberKey(event)'   onchange='gettxtproportion(this.id,this.value)' name='rank' id='txtproportion" + data[i].assetcatid + "' />";
                                 res += "</div>";
                                 res += "</div>";





                                 res += "<div class='col-sm-2' id='singlepropo" + data[i].assetcatid + "' style='display:none;'>";
                                 res += "<div class='form-group start'>";
                                 res += "<label for='input-1'>single Proportion</label>";
                                 res += "<input type='text' id='txtsingleproportion" + data[i].assetcatid + "' Value='100'  class='form-control' readonly />";
                               
                                 res += "</div>";
                                 res += "</div>";










                                 res += "</div>";
                                 res += "</div>";


                                 res += "<div class='form-group'>";
                                 res += "&nbsp;&nbsp;&nbsp;&nbsp;<button type='submit'  formaction='InsertMultipleAssetMappeddata' id='btnmappingsubmit' value=" + data[i].assetcatid + "  class='btn btn-primary shadow-primary px-5 btn" + data[i].assetcatid + "'><i class='icon-lock'></i>Submit</button>";
                                 res += "&nbsp;&nbsp;&nbsp;&nbsp;<button type='button' id='btnadd'   value='" + data[i].assetcatid + "' style='display:none;' disabled='disabled'    class='btn btn-success shadow-primary px-5 btnadd"+data[i].assetcatid+"'><i class='icon-lock'></i>Add Multiple</button>";
                                 res += "&nbsp;&nbsp;&nbsp;&nbsp;<input type='button' value='Reset' class='btn btn-danger' id='btnreset' />";
                                 res += " </div>";
                                 res += " </div>";
                                 res += " </div>";
                                 res += " </div>";
                                 res += " </div>";
                             

                                 $("#accordion8").append(res);

                                 if ($("#getvalone").prop("checked", true)) {

                                     $("#totaldiv" + data[i].assetcatid + "").hide();
                                     $("#singlepropo" + data[i].assetcatid + "").show();

                                     $(".btn" + data[i].assetcatid + "").removeAttr("disabled");

                                     $(".alt").hide();

                                     $("#mainbeneddl" + data[i].assetcatid + "").show();

                                     $(".alternaterow").hide();
                                  
                                 }

                               

                             }


                             var data = beneficiarycontent;

                             var md = data.split("~")[0];
                             var count = data.split("~")[1];
                             var alterbene = data.split("~")[2];
                         
                             $("#txtcount").val(count);
                             for (var i = 1; i < count; i++) {


                                 var x = $("#ddlbeneficiary" + i + "").empty().append(md);
                                 var x = $("#alt_beneficiary1").empty().append(md);
                                 //alert(x);

                             }



                             for (var i = 1; i < count; i++) {


                                 var x = $("#ddlbeneficiaryalt" + i + "").empty().append(md);

                                 //alert(x);

                             }






                         }



                         $(".grandparent").hide();
                         $("#totaldiv").hide();



                }
            });








            // schemename

                $.ajax({

                type: "POST",

                 url: "@Url.Action("getassetcolumndata", "AddAssetMapping")",
                //data: { "send": "" + value + "" },
                success: function (data) {

                    var response = data;
                    var md = response.split("~")[0];
                    var count = response.split("~")[1];
                    for (var i = 0; i < count; i++) {

                        $("#schemename"+i+"").append(data);


                    }
                    //var r = data;
                    //var str = data;
                    //var res = str.replace("<label for='input-1'>Scheme</label> <input type='text' class='form-control' id='schemename'  value=", "").replace("/>", "");


                }
            });











            //end



           









            $.ajax({

                type: "POST",

                 url: "@Url.Action("BindAssetTypeDDL", "AddAssetMapping")",
                success: function (data) {
                    $("#ddlassettype").append(data);
                }
            });



            $.ajax({

            type: "POST",
            url:"@Url.Action("BindTestatorDDL", "AddAssetMapping")",
                  success: function (data) {
                      var splitted = data.split("~");
                      $("#DDLTestator").append(splitted[0]);
                      $("#ddltid").val(splitted[1]);
                      var pop = splitted[2];
                      //$('#DDLTestator').append(data);
                      if (pop == "true") {

                          $("#confirmtestatorfamily").on("click", function () { });

                          $("#confirmtestatorfamily").click(); //trigger event after listening to it.
                      }





            }
          });


            $.ajax({
                type: "POST",

                 url: "@Url.Action("ddlassetname", "AddAssetMapping")",
                //data: { "send": "" + value + "" },
                success: function (data) {

                    var response = data;
                    var md = data.split("~")[0];
                    var count = data.split("~")[1];
                    for (var i = 0; i < count; i++) {
                        $("#DDLAssetColumn"+i+"").append(md);
                    }

                }
            });







               var val = $("#tid").val();

        var checkstatus =  $("#txtcheck").val();

             $.ajax({

            type: "POST",
            url:"@Url.Action("CheckTestatorUsers", "AddAssetMapping")",
                 data: { value: val, checkstatus: checkstatus },
            success: function (data) {

                if (data == 2) {

                    $("#confirmtestatorfamily").on("click", function () { });

                    $("#confirmtestatorfamily").click();

                    $("#btnnext").show();

                }







            }
        });









        });



        $(document).on("click", "#alternatebtn", function () {

            $("#field1").show();
            $("#field2").show();
            $("#field3").show();
            $("#field4").show();

            $("#checkaltbenestatus").val('true');

            $("#alternatebtn").hide();
            

        });







        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }
        $(document).on('keyup', '.proportioninput', function () {

          

           

            var $rowdiv = $(this).closest('.rowdiv');
            var $prevdiv = $rowdiv.prev('.rowdiv');
            var parentaccordionid = $rowdiv.parent('div').parent('div').parent('div').parent('div').attr('id');



            var rr = $(this).attr('id');
            var f = rr.replace('txtproportion', '');
            // var temp = $("#txttotalval").val();
            var temp = $(this).closest('.accordiondiv').find('.total_liability_petcare_proportion').val();


            var prevtotalinputval = $prevdiv.find('.totalinput').val();

            $prevdiv.find('.proportioninput').prop('readonly', true);

            
            


            if (typeof prevtotalinputval === "undefined") {

                prevtotalinputval = temp;
            }
            var proportionvalue = $(this).val();

            $rowdiv.find("table").find("tr:first").find('.alt_total').val(proportionvalue);
           
            if (prevtotalinputval != "") {
                if (parseInt(prevtotalinputval) > parseInt(proportionvalue) || parseInt(prevtotalinputval) == parseInt(proportionvalue)  ) {



                    if (proportionvalue == "") {


                        $(".btnadd" + f + "").attr("disabled", "disabled");
                    }
                    else {

                        $(".btnadd" + f + "").removeAttr("disabled");
                    }










                    var t = $("#txttotalval").val();
                    var result = "";



                    // if ($rowdiv.find('.totalinput').val() == "") {

                    $rowdiv.find('.totalinput').val(temp - proportionvalue);

                    if (temp != "100") {
                        // alert('1st');
                        var x = prevtotalinputval - proportionvalue;
                        if (parseInt(proportionvalue) > prevtotalinputval) {
                            alert('proportion value cannot be greater than ' + prevtotalinputval);
                            $(this).val('');
                            $rowdiv.find('.totalinput').val('');
                        } else {
                            $rowdiv.find('.totalinput').val(x);
                        }

                    }

                    
               
                    if (temp == "100") {
                        // alert('2nd');

                        var x = parseInt(prevtotalinputval) - proportionvalue;
                        if (parseInt(proportionvalue) > parseInt(temp)) {
                            alert('proportion value cannot be greater than ' + parseInt(temp));
                            $(this).val('');
                            $rowdiv.find('.totalinput').val('');
                        } else {
                            $rowdiv.find('.totalinput').val(x);
                        }

                    }
                    if ($rowdiv.find('.totalinput').val() != "") {
                        if ($rowdiv.find('.totalinput').val() > 0) {

                            //$('#' + parentaccordionid).find('#btnmappingsubmit').attr("disabled", "disabled");

                        } else {

                            $('#' + parentaccordionid).find('#btnmappingsubmit').removeAttr("disabled");
                            $(".btnadd" + f + "").attr("disabled", "disabled");

                        }
                    } else {
                        $('#' + parentaccordionid).find('#btnmappingsubmit').attr("disabled", "disabled");
                    }





                }
                else {

                    alert("Proportion Value Cannot Be Greater Than Total...!");

                    $(this).val("");
                    var x = $rowdiv.find('.totalinput').val("");


                }


                 //$(this).id.attr("disabled","disabled");




            }










               /* var x = prevtotalinputval - proportionvalue;
                $rowdiv.find('.totalinput').val(x);*/
        //    }




            //if ($rowdiv.find('.totalinput').val() != "") {
            //    alert('deduct');
            //    $rowdiv.find('.totalinput').val(prevtotalinputval - proportionvalue);
            //}



            //        result = prevtotalinputval - proportionvalue;

            //$(this).parent().
            //var parentdivclassname = $(this).parent('div').parent('div').parent('div').parent('div').attr('id');

            //proportionvalue = + proportionvalue;
            //if (proportionvalue <= parseInt(100)) {



            //    if (t == '') {

            //        $rowdiv.find('.totalinput').val(parseInt(100) - proportionvalue);
            //        result = prevtotalinputval - proportionvalue;



            //    }




            //} else {
            //    $(this).val('');
            //    $rowdiv.find('.totalinput').val('100');

            //}

        //    if ($prevdiv.length > 0) {
        //        var prevtotalinputval = $prevdiv.find('.totalinput').val();

        //}

            var d = this.id;
            
            //$("#"++"").attr("disabled", "disabled");


        });






        @*function getassettypeid(value) {




            $.ajax({

                type: "POST",

                 url: "@Url.Action("bindassetcatDDL", "AddAssetMapping")",
                data: { "send": "" + value + "" },
                success: function (data) {
                    $("#ddlassetcat").empty().append(data);


                }
            });





        }*@



        //function getassetcatid(value) {


        //    $("#beneficiarydetails").show();
        //    $("#type").show();






        //}


        /* $(document).on("change", "#ddlbeneficiary", function () {
             var value = $(this).children(":selected").attr("value");
             var text = $("#ddlbeneficiary option:selected").html();


             var parent = $(this).closest(".rowdiv").find("#ddlbeneficiary").val();

             alert(parent);


             $("#Beneficiarytxt").val(value).attr("disabled", "disabled");


             $("#query").append(value + ",");

         });*/





        function checkbeneficiaryduplicate(id, value) {
       
            var dt = '';
            var lang_name = $('#' + id).val();
            var selectedtext = $("#" + id + " option:selected").text();
            var check = 'active';
            $(".beneficiaryclass").each(function () {
                var myid = $(this).attr('id');
            
                var myval = $('#' + myid).val();
                if (id != myid) {
                    if (lang_name == myval && lang_name != '') {
                        alert(selectedtext + ' already exists');
                        $("#" + id).val('0');
                        check = 'inactive';
                        return false;
                    }

                }


            });





            if (check == 'active') {
                var v1 = id;
                var v2 = v1.replace("ddlbeneficiary", "");



                $("#Beneficiarytxt").val(id).attr("disabled", "disabled");


                $("#query").append(value + ",");

            }



        }






        function altcheckbeneficiaryduplicate(id, value) {



            var dt = '';
            var lang_name = $('#' + id).val();
            var selectedtext = $("#" + id + " option:selected").text();
            var check = 'active';
            $(".altbeneficiaryclass").each(function () {
                var myid = $(this).attr('id');
                var myval = $('#' + myid).val();
                if (id != myid) {
                    if (lang_name == myval && lang_name != '') {
                        alert(selectedtext + ' already exists');
                        $("#" + id).val('0');
                        check = 'inactive';
                        return false;
                    }

                }


            });





            if (check == 'active') {
                var v1 = id;
                var v2 = v1.replace("ddlbeneficiary", "");



                $("#Beneficiarytxt").val(id).attr("disabled", "disabled");


                $("#query").append(value + "~");

            }



        }




        function getDDLAssetColumn(id) {

            var conceptName = $("#"+id+"").find(":selected").text();


            //var dt = '';
            //var lang_name = $('#' + id).val();
            //var selectedtext = $("#" + id + " option:selected").text();
            //var check = 'active';
            //$(".instrumentclass").each(function () {
            //    var myid = $(this).attr('id');
            //    var myval = $('#' + myid).val();
            //    if (id != myid) {
            //        if (lang_name == myval && lang_name != '') {
            //            alert(selectedtext + ' already exists');
            //            $("#" + id).val('0');
            //            check = 'inactive'
            //        }

            //    }


            //});


            //if (check == 'active') {
                //var value = $(this).children(":selected").attr("value");
                //var text = $("#DDLAssetColumn1 option:selected").html();

                //$("#Instrumenttxt").val(text);
                //$("#Instrumenttxt").val(id);
                $("#query").append("'" + conceptName + "'" + ",");
            //}


        };




        $("#ddlassettype").change(function () {
            var value = $(this).children(":selected").attr("value");
            var text = $("#ddlassettype option:selected").html();

            $("#assettypeid").val(text);
            $("#assettypetxt").val(value);


        });



        $("#ddlassetcat").change(function () {

            var value = $(this).children(":selected").attr("value");
            var text = $("#ddlassetcat option:selected").html();

            $("#assetcatid").val(text);
            $("#assetcattxt").val(value);


        });


        $(document).on("change", "#getvalone", function (e) {

            $(".alt").hide();
            var myClass = $(this).attr("class");

            $("#parentdiv" + myClass + "").find(".rowdiv").not(':first').last().remove();

            $(".grandparent").hide();
           
            $("#singlepropo" + myClass + "").show();
            $(".btn"+myClass+"").removeAttr("disabled");

            $("#totaldiv" + myClass + "").hide();
       

            $(".alternaterow").hide();
        

            $(".btn" + myClass + "").removeAttr("disabled");

            $("#mainbeneddl" + myClass+ "").show();



            $("#appendselection").empty().append("<input type='text' class='form-control' placeholder='Certificate No.' /> ");

            $(".btnadd" + myClass).hide();

            $("#benetempddl" + myClass).show();

           

            
            
        });

        $(document).on("change", "#getvaltwo", function () {




            var myClass = $(this).attr("class");
            $(".alternaterow").show();

            $(".alt").show();

            $(".btnadd" + myClass).show();
            $(".btn" + myClass + "").attr("disabled","disabled");
            $(".grandparent").show();
          var x = $("#totaldiv"+myClass+"").show();

            $("#singlepropo" + myClass + "").hide();
            $("#mainbeneddl" + myClass + "").show();
            $("#benetempddl" + myClass + "").hide();


            $("#txtproportion" + myClass + "").val("");


            $("#txttotal" + myClass + "").val("100");
            $("#txttotalval").val("100");

        });

        $(document).on("click", "#btnremove", function () {


            var btnnum = $(this).val();


            $(".btn"+btnnum+"").attr("disabled", "disabled");


            $(".btnadd" + btnnum + "").removeAttr("disabled");



            $("#parentdiv" + btnnum + "").find('.rowdiv:last').remove();



        });



        var cloneCount = 1;
        $(document).on("click", "#btnadd", function () {

            $(this).attr("disabled", "disabled");
            var btnnum = $(this).val();



            var x = $(this).closest("#accordio1").find("#addalt:last").addClass("btn-"+cloneCount);
           
         //   alert(x);
           

      
            

            //get parentdiv last div element whose class name is rowdiv

            $("#txttotalval").val("");


            var $clone = $("#parentdiv"+btnnum+"").find('.rowdiv:last').clone();

            var alternatebene = $("#parentdiv" + btnnum + "").find(".altbeneficiaryclass:last").val();
            $clone.find("table").find("tr:not(:last)").remove();
            if (alternatebene == "0") {
                $("#query").append("0~")
            }


            // for beneficiary ddl id auto generate  getidentifier

            $clone.find('.beneficiaryclass').each(function () {
                var el = $(this);
                
                var id = el.attr('id') || null;

                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });

            // end






            // for alternate beneficiary ddl id auto generate  getidentifier

            $clone.find('.altbeneficiaryclass').each(function () {
                var el = $(this);

                var id = el.attr('id') || null;

                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });

            // end





            // for scheme ddl id auto generate

            $clone.find('.schemenameclass').each(function () {
                var el = $(this);
                var id = el.attr('id') || null;


                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });

            // end




            // instument ddl


            $clone.find('.instrumentclass').each(function () {
                var el = $(this);
                var id = el.attr('id') || null;


                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });





            //





            $clone.find('.proportioninput').val('');
            $clone.find('.totalinput').val('');
            $clone.appendTo("#parentdiv"+btnnum+"");


            var assettype = $("#ddlassettype").val();
            var assetcat = $("#ddlassetcat").val();
            var beneficiary = $("#ddlbeneficiary1").val();
            var schemename = $("#schemename1").val();
            var instrument = $("#DDLAssetColumn1 option:selected").html();
            var proportion = $("#txtproportion").val();


            //$("#query").append( "(" + assettype +","+ assetcat + "," + beneficiary + "," + schemename + "," + instrument + "," + proportion + ")" + "~")


        });


        function blurFunction(id,value) {




        }


        function gettxtproportion(id,value) {


            $("#query").append(value + ",");
        }

        function calculatefun(value) {

            var row = $(this).closest(".grandparent");
            var input = $(row).find("input").val();


            var total = $("#txttotal").val()


            var f = total - value;
            $("#txttotal").val(f);




        }


        $(document).on("click", "#btnmappingsubmit", function () {
           
            var btnidentify = $(this).val();

            var radioValue = $("input[class="+btnidentify+"]:checked").val();

            var assettype = $("#ddlassettype").val();
            var assetcat = $("#txtassetcat" + btnidentify + "").val();
            var beneficiary = $("#ddlbeneficiary" + btnidentify + "").find(":selected").val();
            var schemename = $("#schemename" + btnidentify + "").find(":selected").text();
            var instrument = $("#DDLAssetColumn" + btnidentify + "").find(":selected").text();
            var proportion = $("#txtproportion" + btnidentify + "").val();
            var tid = $("#tid").val();
            var altbene = $("#ddlbeneficiaryalt" + btnidentify + "").find(":selected").val();


            if (radioValue == "Single") {


                




                if ($("#ddlbeneficiary"+btnidentify+"").find(":selected").val() == "") {



                    alert('Please Fill Out Manadatory Field');
                }
                else {

                    var data = assetcat + "~" + beneficiary + "~" + tid + "~" + btnidentify + "~" + altbene;

                    $.ajax({

                        type: "POST",
                        url:"@Url.Action("InsertSingleAssetMappeddata", "AddAssetMapping")",
                        data: { "send": "" + data + "" },
                        success: function (data) {


                           



                            $("#btnmainassetsuccess").on("click", function () { });

                            $("#btnmainassetsuccess").click();

                            $("#ddlassettype").val("");
                            $("#ddlassetcat").val("");
                            $("#ddlbeneficiary").val("");
                            $("#schemename").val("");
                            $("#DDLAssetColumn").val("");
                            $("#txtproportion").val("");





                            

                            $(".btn" + data + "").hide();
                            
                            $("#main-body" + data + "").hide();


                            location.reload();

                        }
                    });

                }





            }
            if (radioValue == "Multiple") {

                if ($("#ddlbeneficiary" + btnidentify + "").find(":selected").val() == "" || $("#txtproportion" + btnidentify + "").val() == "") {



                    alert('Please Fill Out Manadatory Field');
                }
                else {

                    @*var data = $("#query").val();

                    $.ajax({

                        type: "POST",
                        url:"@Url.Action("InsertMultipleAssetMappeddata", "AddAssetMapping")",
                        data: { data: data, assetcat: assetcat, tid: tid, btnidentify:btnidentify },
                        success: function (data) {
                            
                            

                            $("#btnmainassetsuccess").on("click", function () { });

                            $("#btnmainassetsuccess").click();



                            $("#ddlassettype").val("");
                            $("#ddlassetcat").val("");
                            $("#ddlbeneficiary").val("");
                            $("#schemename").val("");
                            $("#DDLAssetColumn").val("");
                            $("#txtproportion").val("");


                          
                          
                            $(".btn" + data + "").hide();

                            $("#main-body" + data + "").hide();

                            location.reload();
                        }
                    });*@
                }




            }





        });





        /*$(document).on("click", ".btnaddalternate", function () {
            var $rowdiv = $(this).closest('.rowdiv');
            
            var $alternaterow = $rowdiv.find(".alternaterow");
           
            var $clone = $alternaterow.clone();
           
            $clone.insertAfter($alternaterow);
           // $("#alternatefield").toggle();
            
            


        });*/


        function getschemename(id) {

            var conceptName = $("#"+id+"").find(":selected").text();

            //var dt = '';
            //var lang_name = $('#' + id).val();
            //var selectedtext = $("#" + id + " option:selected").text();
            //var check = 'active';
            //$(".schemenameclass").each(function () {
            //    var myid = $(this).attr('id');
            //    var myval = $('#' + myid).val();
            //    if (id != myid) {
            //        if (lang_name == myval && lang_name != '') {
            //            alert(selectedtext + ' already exists');
            //            $("#" + id).val('0');
            //            check = "inactive";
            //        }
            //    }


            //});


            //if (check == 'active') {
            //    var v1 = id;
            //    var v2 = v1.replace("schemename", "");
            //    var text = $("#schemename option:selected").html();


            $("#query").append("'" + conceptName + "'" + ",");
            //}



        }

    </script>
    @if (ViewBag.Message == "Verified")
    {
        <script>

            $(document).ready(function () {


                $("#btnmainassetsuccess").on("click", function () { });

                $("#btnmainassetsuccess").click(); //trigger event after listening to it.




            });
        </script>

    }
    <script>





function getDDLTestator(value) {

        var text = $("#DDLTestator option:selected").html();





        $("#ddltestatorname").val(text);
        $("#ddltid").val(value);
        var checkstatus = $("#txtcheck").val();


              $.ajax({

            type: "POST",
            url:"@Url.Action("CheckTestatorUsers", "AddAssetMapping")",
            data: { value: value, checkstatus: checkstatus },
            success: function (data) {

                if (data == 2) {
                    $("#confirmtestatorfamily").on("click", function () { });

                    $("#confirmtestatorfamily").click(); //trigger event after listening to it.



                }







            }
    });




     };



        $('.checkbox1').on('change', function () {
            if (!$(this).is(':checked')) {
                $('.checkbox1').prop('checked', false);
                $("#txtcheck").val("false");

            } else {
                $('.checkbox1').prop('checked', true);
                $("#txtcheck").val("true");
            }
        });









    </script>
    <script>
        $("#confirmtestatorfamily").click(function () {
            $("#btnnext").show();
            swal({

                text: 'Your Mapping Data Submitted Successfully Do You Want To Add More ?',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
                buttons: ['No', 'Yes']
            })
                .then((willDelete) => {
                    if (willDelete) {



                    } else {





                        var url = "/AddNominee/AddNomineeIndex/";
                        window.location.href = url;




                    }
                });

        });

        /* for grouping json data */


        function getItemByKey(arr, key, value) {
            // here we look for existing group item in the result array
            return arr.reduce(function (prev, cur) {
                if (prev == null && cur[key] == value) {
                    return cur;
                }
                return prev;
            }, null);
        }

        function checkPropForGroup(prop, key) {
            // here we check which columns should stay in the group,
            // and which should go down to group items.
            return prop == key || prop == key.replace("_id", "_name");
        }

        function cloneSuperItem(src, key) {
            // create super item by copying only group related fields
            var item = {};
            for (prop in src) {
                if (checkPropForGroup(prop, key)) {
                    item[prop] = src[prop];
                }
            }
            item[key + '_group'] = [];
            return item;
        }

        function cloneSubItem(src, key) {
            // create sub-item by copying all but group related fields
            var item = {};
            for (prop in src) {
                if (!checkPropForGroup(prop, key)) {
                    item[prop] = src[prop];
                }
            }
            return item;
        }

        function groupArray(arr, args, lvl) {
            var key = args[lvl];
            var result = [];
            arr.forEach(function (item, ind, a) {
                // find or create super item for group and then create sub item and push it there
                var keyItem = getItemByKey(result, key, item[key]);
                if (!keyItem) {
                    keyItem = cloneSuperItem(item, key);
                    result.push(keyItem);
                }
                subItem = cloneSubItem(item, key);
                keyItem[key + '_group'].push(subItem);
            });
            if (args[lvl + 1]) {
                // recursively make grouping on lower level
                for (var i = 0; i < result.length; i++) {
                    result[i][key + '_group'] = groupArray(result[i][key + '_group'], args, lvl + 1);
                }
            }
            return result;
        }

        function groupArrayMain(arr, keysArray) {
            // keys should be simply listed as parameters in order from top group to lower
            return groupArray(arr, arguments, 1)
        }



    </script>

    @*@if (Session["assettypeidforpetcare"] != null || Session["assetcategoryidforpetcare"] != null)
        {
            <script>

                document.ready(function () {

                    $


                });


            </script>
        }*@
    @*@if (Session["assettypeidforliablities"] != null || Session["assetcategoryidforliablities"] != null)
        {
              <script>


                  document.ready(function () {



                  });


              </script>
        }*@


    <script>


             $.ajax({

            type: "POST",
            url:"@Url.Action("LastAssetsRecords", "AddAssetMapping")",
            success: function (data) {

            

            }
        });


        $(document).on("click", "#btnreset", function () {


            location.reload();
            

        });
        $(document).on('click', '.btnaddalternate', function () {

            var $tr = $(this).closest('tr');

            var $lastTr = $tr.closest('table').find('tr:last');

            var $clone = $lastTr.clone();
            $('input[type=text]', $clone).val('');
            $clone.find('td').each(function () {
                var el = $(this).find(':first-child');
                var id = el.attr('id') || null;

                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });
            // insert a remove link in the last cell

            $('td:last-child', $lastTr).html('<a href="javascript:void(0);" class="btn btn-sm btn-danger remove removeDefault"><i class="fa fa-minus" aria-hidden="true"></i></a>');
            $tr.closest('tbody').append($clone);
          
            // add the remove function to the new row
            $('a.remove', $lastTr).click(function () {

                $(this).closest('tr').remove();
                return false;
            });

        });
        $('.removeDefault').click(function () {
            $(this).closest('tr').remove();
            return false;
        });
        function checkaltbeneficiaryduplicate(id) {
            var dt = '';
            var lang_name = $('#' + id).val();
            var selectedtext = $("#" + id + " option:selected").text();
            var i = id.substr(id.length - 1);

            $(".altbeneficiaryclass ").each(function () {
                var myid = $(this).attr('id');
                var myval = $('#' + myid).val();
                if (id != myid) {
                    if (lang_name == myval && lang_name != '') {
                        alert(selectedtext + ' already exists');
                        $("#" + id).val('0');
                       // $("#" + id).select2('val', '');
                    }
                }


            });

        }
    </script>