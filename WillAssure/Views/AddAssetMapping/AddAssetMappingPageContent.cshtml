﻿@model WillAssure.Models.AssetMappingModel
@{
    ViewBag.Title = "AddAssetMappingPageContent";
}


@*Main Content*@
<div class="content-wrapper">
    <div class="container-fluid">
        <div class="row pt-2 pb-2">
            <div class="col-sm-3">
                <div class="btn-group float-sm-right">
                    <div class="dropdown-menu">
                        <a href="javaScript:void();" class="dropdown-item">Action</a>
                        <a href="javaScript:void();" class="dropdown-item">Another action</a>
                        <a href="javaScript:void();" class="dropdown-item">Something else here</a>
                        <div class="dropdown-divider"></div>
                        <a href="javaScript:void();" class="dropdown-item">Separated link</a>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Breadcrumb-->
        @*@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RoleForm" }))
            {*@
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="card-title text-primary">Asset Mapping</div>
                        <hr>


                        <div class="row">



                            <div class='col-sm-6'>
                                <div class='form-group'>
                                    <label for='input-1'>Assets Type</label>
                                    <select id='ddlassettype' name="contentList" onChange='getassettypeid(this.value)' class='form-control'></select>
                                    @Html.HiddenFor(m => m.assettypeid, new { id = "assettypeid" })
                                    @Html.HiddenFor(m => m.assettypetext, new { id = "assettypetext" })
                                </div>
                            </div>

                            <div class='col-sm-6'>
                                <div class='form-group'>
                                    <label for='input-1'>Assets Category</label>
                                    <select id='ddlassetcat' name="contentList" onChange='getassetcatid(this.value)' class='form-control'></select>
                                    @Html.HiddenFor(m => m.assetcatid, new { id = "assetcatid" })
                                    @Html.HiddenFor(m => m.assetcattext, new { id = "assetcattext" })
                                </div>
                            </div>
                        </div>

                        <div class='col-sm-3' id="type" style="display:none;">
                            <div class='form-group'>
                                <label for='input-1'>Type</label>
                                <br />
                                <form>
                                    <label class="radio-inline">
                                        <input type="radio" onchange="getvalone(this.value)" name="optradio" value="Single" checked>Single
                                    </label>
                                    <label class="radio-inline">
                                        <input type="radio" onchange="getvaltwo(this.value)" name="optradio" value="Multiple">Multiple
                                    </label>
                                </form>
                            </div>
                        </div>


                        <div id="parentdiv">
                            <div class="row rowdiv" id="beneficiarydetails" style="display:none;">


                                <div class='col-sm-2'>
                                    <div class='form-group'>
                                        <label for='input-1'>Beneficiary</label>
                                        <select id='ddlbeneficiary1' onchange="checkbeneficiaryduplicate(this.id)" name="contentList" class='form-control beneficiaryclass'></select>
                                        @Html.HiddenFor(m => m.Beneficiaryid, new { id = "Beneficiaryid" })
                                        @Html.HiddenFor(m => m.Beneficiarytxt, new { id = "Beneficiarytxt" })

                                        <input type="text" class="form-control" style="display:none" id="ddlbeneficiarytxt" name="name" value="" />
                                    </div>
                                </div>
                                <div class='col-sm-2'><div class='form-group' id="getidentifier"></div></div>
                                <div class='col-sm-3'>
                                    <label for='input-1'>Instruments</label>
                                    <select id='DDLAssetColumn1' onchange="getDDLAssetColumn(this.id)" name="contentList" class='form-control instrumentclass'></select>
                                    @Html.HiddenFor(m => m.InstrumentId, new { id = "InstrumentId" })
                                    @Html.HiddenFor(m => m.Instrumenttxt, new { id = "Instrumenttxt" })
                                </div>
                                <div class='col-sm-2 grandparent'>
                                    <div class='form-group parent'>
                                        <label for='input-1'>Proportion</label>
                                        <input type='text' class='form-control proportioninput' onkeypress="return isNumberKey(event)" onchange="gettxtproportion(this.value)" name="rank" id="txtproportion" />
                                    </div>
                                </div>
                                <div class='col-sm-2'>
                                    <div class='form-group start'>
                                        <label for='input-1'>Total</label>
                                        <input type='text' id="txttotal" class='form-control totalinput' readonly />
                                    </div>
                                </div>
                            </div>
                                </div>

                                <textarea id="query" style="display:;" class="form-control">
                               
                           </textarea>
                                <div class="form-group">
                                    <button type="button" id="btnadd" style="display:none;" class="btn btn-danger shadow-primary px-5"><i class="icon-lock"></i>Add</button>
                                    <button type="button" id="btnmappingsubmit" class="btn btn-primary shadow-primary px-5"><i class="icon-lock"></i>Submit</button>
                                    <button type="button" id="btnmainassetsuccess" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>

                                </div>
                            </div>
                </div>

            </div>

        </div>
        @*}*@

    </div>
    @*end*@


    <script>
        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }
        $(document).on('keyup', '.proportioninput', function () {
            var $rowdiv = $(this).closest('.rowdiv');
            var proportionvalue = $(this).val();
            //$(this).parent().
            //var parentdivclassname = $(this).parent('div').parent('div').parent('div').parent('div').attr('id');

            proportionvalue = + proportionvalue;
            if (proportionvalue <= parseInt(100)) {
                $rowdiv.find('.totalinput').val(parseInt(100) - proportionvalue);
            } else {
                $(this).val('');
                $rowdiv.find('.totalinput').val('100');
            }

        });
        $(document).ready(function () {

            $.ajax({

                type: "POST",
                url: "../AddAssetMapping/BindBeneficiaryDDL",
                success: function (data) {
                    $("#ddlbeneficiary1").append(data);
                }
            });




            $.ajax({

                type: "POST",
                url: "../AddAssetMapping/BindAssetTypeDDL",
                success: function (data) {
                    $("#ddlassettype").append(data);
                }
            });


            $.ajax({
                type: "POST",
                url: "../AddAssetMapping/ddlassetname",
                data: { "send": "" + value + "" },
                success: function (data) {
                    $("#DDLAssetColumn1").append(data);
                }
            });





        });








        function getbeneficiaryId(value) {
       
        }




        function getassettypeid(value) {




            $.ajax({

                type: "POST",
                url: "../AddAssetMapping/bindassetcatDDL",
                data: { "send": "" + value + "" },
                success: function (data) {
                    $("#ddlassetcat").empty().append(data);


                }
            });





        }



        function getassetcatid(value) {


            $("#beneficiarydetails").show();
            $("#type").show();
            $.ajax({

                type: "POST",
                url: "../AddAssetMapping/getassetcolumndata",
                data: { "send": "" + value + "" },
                success: function (data) {
                    $("#getidentifier").append(data);
                    var r = data;
                    var str = data;
                    var res = str.replace("<label for='input-1'>Scheme</label> <input type='text' class='form-control' id='schemename'  value=", "").replace("/>", "");


                }
            });



            $.ajax({

                type: "POST",
                url: "../AddAssetMapping/ddlassetname",
                data: { "send": "" + value + "" },
                success: function (data) {
                    $("#DDLAssetColumn1").append(data);

                }
            });


        }


       /* $(document).on("change", "#ddlbeneficiary", function () {
            var value = $(this).children(":selected").attr("value");
            var text = $("#ddlbeneficiary option:selected").html();


            var parent = $(this).closest(".rowdiv").find("#ddlbeneficiary").val();

            alert(parent);


            $("#Beneficiarytxt").val(value).attr("disabled", "disabled");


            $("#query").append(value + ",");

        });*/


    


        function checkbeneficiaryduplicate(id) {

            var dt = '';
            var lang_name = $('#' + id).val();
            var selectedtext = $("#" + id + " option:selected").text();
            var check = 'active';
            $(".beneficiaryclass").each(function () {
                var myid = $(this).attr('id');
                var myval = $('#' + myid).val();
                if (id != myid) {
                    if (lang_name == myval && lang_name != '') {
                        alert(selectedtext + ' already exists');
                        $("#" + id).val('0');
                       check = 'inactive'
                    }

                }


            });


            


            if (check=='active') {
                var v1 = id;
                var v2 = v1.replace("ddlbeneficiary", "");



                $("#Beneficiarytxt").val(id).attr("disabled", "disabled");


                $("#query").append(v2 + ",");

            }
          

           
        }




        function getDDLAssetColumn(id) {



            var dt = '';
            var lang_name = $('#' + id).val();
            var selectedtext = $("#" + id + " option:selected").text();
            var check = 'active';
            $(".instrumentclass").each(function () {
                var myid = $(this).attr('id');
                var myval = $('#' + myid).val();
                if (id != myid) {
                    if (lang_name == myval && lang_name != '') {
                        alert(selectedtext + ' already exists');
                        $("#" + id).val('0');
                        check = 'inactive'
                    }

                }


            });

           
            if (check == 'active') {
                //var value = $(this).children(":selected").attr("value");
                var text = $("#DDLAssetColumn1 option:selected").html();

                $("#Instrumenttxt").val(text);
                $("#Instrumenttxt").val(id);
                $("#query").append("'" + text + "'" + ",");
            }

         
        };




        $("#ddlassettype").change(function () {
            var value = $(this).children(":selected").attr("value");
            var text = $("#ddlassettype option:selected").html();

            $("#assettypeid").val(text);
            $("#assettypetxt").val(value);


        });



        $("#ddlassetcat").change(function () {

            var value = $(this).children(":selected").attr("value");
            var text = $("#ddlassetcat option:selected").html();

            $("#assetcatid").val(text);
            $("#assetcattxt").val(value);


        });


        function getvalone(value) {
            $("#appendselection").empty().append("<input type='text' class='form-control' placeholder='Certificate No.' /> ");
            $("#btnadd").hide();
        }

        function getvaltwo(value) {
            $("#btnadd").show();
        }

        $("#btnadd").click(function () {

            //get parentdiv last div element whose class name is rowdiv
            var $clone = $("#parentdiv").find('.rowdiv:last').clone();

            
            
         
            // for beneficiary ddl id auto generate  getidentifier

            $clone.find('.beneficiaryclass').each(function () {
                var el = $(this);
                
                var id = el.attr('id') || null;
              
                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });

            // end




            // for scheme ddl id auto generate

             $clone.find('.schemenameclass').each(function () {
                var el = $(this);
                 var id = el.attr('id') || null;
               
                
                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });

            // end




            // instument ddl


            $clone.find('.instrumentclass').each(function () {
                var el = $(this);
                var id = el.attr('id') || null;

            
                if (id) {

                    //  var i = id.substr(id.length - 1);

                    //code for geting only number from alphanumer string
                    number = id.replace(/\D/g, ''); // a string of only digits, or the empty string
                    var i = parseInt(number, 10); // now it's a numeric value

                    //code for getting only alpha character from alphanumer string
                    var prefix = id.replace(/[^a-zA-Z]/g, '');
                    //var prefix = id.substr(0, (id.length - 1));

                    el.attr('id', prefix + (+i + 1));

                }
            });





            //





            $clone.find('.proportioninput').val('');
            $clone.find('.totalinput').val('');
            $clone.appendTo("#parentdiv");


            var assettype = $("#ddlassettype").val();
            var assetcat = $("#ddlassetcat").val();
            var beneficiary = $("#ddlbeneficiary1").val();
            var schemename = $("#schemename1").val();
            var instrument = $("#DDLAssetColumn1 option:selected").html();
            var proportion = $("#txtproportion").val();


            //$("#query").append( "(" + assettype +","+ assetcat + "," + beneficiary + "," + schemename + "," + instrument + "," + proportion + ")" + "~")


        });


        function gettxtproportion(value) {
            $("#query").append(value + "~");
        }

        function calculatefun(value) {

            var row = $(this).closest(".grandparent");
            var input = $(row).find("input").val();
         

            var total = $("#txttotal").val()


            var f = total - value;
            $("#txttotal").val(f);




        }



        $("#btnmappingsubmit").click(function () {

            var radioValue = $("input[name='optradio']:checked").val();
         

            if (radioValue == "Single") {

                var assettype = $("#ddlassettype").val();
                var assetcat = $("#ddlassetcat").val();
                var beneficiary = $("#ddlbeneficiary1").val();
                var schemename = $("#schemename1").val();
                var instrument = $("#DDLAssetColumn1 option:selected").html();
                var proportion = $("#txtproportion").val();


                var data = assettype + "~" + assetcat + "~" + beneficiary + "~" + schemename + "~" + instrument + "~" + proportion;
            
                $.ajax({

                    type: "POST",
                    url: "../AddAssetMapping/InsertSingleAssetMappeddata",
                    data: { "send": "" + data + "" },
                    success: function (data) {


                    }
                });



            }
            if (radioValue == "Multiple") {

                var assettype = $("#ddlassettype").val();
                var assetcat = $("#ddlassetcat").val();
                var schemename = $("#schemename1").val();

                var data = $("#query").val();
               
                $.ajax({

                    type: "POST",
                    url: "../AddAssetMapping/InsertMultipleAssetMappeddata",
                    data: { data: data, assettype: assettype, assetcat: assetcat },
                    success: function (data) {


                    }
                });


            }





        });


        function getschemename(id) {


            var dt = '';
            var lang_name = $('#' + id).val();
            var selectedtext = $("#" + id + " option:selected").text();
            var check = 'active';
            $(".schemenameclass").each(function () {
                var myid = $(this).attr('id');
                var myval = $('#' + myid).val();
                if (id != myid) {
                    if (lang_name == myval && lang_name != '') {
                        alert(selectedtext + ' already exists');
                        $("#" + id).val('0');
                        check = "inactive";
                    }
                }


            });


            if (check == 'active') {
                var v1 = id;
                var v2 = v1.replace("schemename", "");
                var text = $("#schemename option:selected").html();


                $("#query").append("'" + selectedtext + "'" + ",");
            }
            

           
        }

    </script>


    
    @if (ViewBag.Message == "Verified")
    {
        <script>

            $(document).ready(function () {


                $("#btnmainassetsuccess").on("click", function () { });

                $("#btnmainassetsuccess").click(); //trigger event after listening to it.

           


            });
        </script>

    }
