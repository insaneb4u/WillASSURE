@model WillAssure.Models.BeneficiaryInstitutionModel
@{
    /**/

    ViewBag.Title = "AddNomineePageContent";
}

<h2>AddNomineePageContent</h2>

<style>
    ul#menu li {
        display: inline;
    }
</style>
@*Main Content*@

<div class="content-wrapper">
    <div class="container-fluid">


        <!-- End Breadcrumb-->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">


                        @if (Session["WillType"] != null)
                        {
                            if (Session["WillType"].ToString() == "Quick")
                            {
                                <h5>
                                    <ul id="menu" style="font-weight:bold;">
                                        <a href="@Url.Action("UpdateTestatorsIndex","UpdateTestators" , new { NestId = Convert.ToInt32(Session["uuid"]) })"><li style="color:black;">Testator></li></a>
                                        <a href="@Url.Action("AddTestatorFamilyIndex","AddTestatorFamily")"> <li style="color:black;">TestatorFamily ></li></a>
                                        <a href="@Url.Action("AddBeneficiaryInstituteIndex","AddBeneficiaryInstitute")">
                                            <li style="color:;">Institution ></li>
                                        </a>
                                        <li style="color:#e1e1e1">Beneficiary ></li>


                                        <li style="color:#e1e1e1">Executor > </li>
                                        <li style="color:#e1e1e1">Witness > </li>
                                        <li style="color:#e1e1e1">Mapping </li>

                                    </ul>
                                </h5>
                            }
                            else
                            {
                                if (Session["doctype"] != null)
                                {
                                    if (Session["doctype"].ToString() == "POA" || Session["doctype"].ToString() == "GiftDeeds")
                                    {
                                        <h5>
                                            <ul id="menu" style="font-weight:bold;">
                                                <a href="@Url.Action("AddTestatorsFormIndex", "AddTestatorsForm")"><li style="color:black;">Donor ></li></a>
                                                <a href="@Url.Action("AddBeneficiaryIndex", "AddBeneficiary")"><li style="color:black">Donee ></li></a>
                                                <a href="@Url.Action("AddMainAssetsIndex", "AddMainAssets")"><li style="color:black">Gift ></li></a>
                                                <a href="@Url.Action("AddAssetMappingIndex", "AddAssetMapping")">
                                                    <li style="color:">Asset Mapping ></li>
                                                    <li style="color:#e1e1e1">Witness Appointment ></li>


                                            </ul>
                                        </h5>
                                    }
                                    else
                                    {
                                        if (Session["Type"].ToString() != "Testator")
                                        {
                                            <h5>
                                                <ul id="menu" style="font-weight:bold;">


                                                    <a href="@Url.Action("AddTestatorsFormIndex", "AddTestatorsForm", new { NestId = Convert.ToInt32(Session["uuid"]) })"><li style="color:black;">Testator></li></a>
                                                    <a href="@Url.Action("AddTestatorFamilyIndex", "AddTestatorFamily")"><li style="color:black;">Testator Family ></li></a>
                                                    <a href="@Url.Action("AddBeneficiaryInstituteIndex","AddBeneficiaryInstitute")">
                                                        <li style="color:black;">Institution ></li>
                                                    </a>
                                                    <a href="@Url.Action("AddBeneficiaryIndex", "AddBeneficiary")"><li style="color:black;">Beneficiary ></li></a>
                                                    <a href="@Url.Action("AddMainAssetsIndex", "AddMainAssets")"><li style="color:black">AssetInformation ></li></a>
                                                    <a href="@Url.Action("AddLiabilitiesIndex", "AddLiabilities")"><li style="color:black;">Liabilites></li></a>
                                                    <a href="@Url.Action("AddPetCareIndex", "AddPetCare")"><li style="color:black">PetCare ></li></a>
                                                    <a href="@Url.Action("AddAssetMappingIndex", "AddAssetMapping")"><li style="color:black">Mapping ></li></a>
                                                    <a href="@Url.Action("AddNomineeIndex", "AddNominee")"><li style="">Nominee ></li></a>
                                                    <li style="color:#e1e1e1">Executor > </li>
                                                    <li style="color:#e1e1e1">Witness > </li>
                                                    <li style="color:#e1e1e1">Document</li>


                                                </ul>
                                            </h5>

                                        }
                                        else

                                        {
                                            <h5>
                                                <ul id="menu" style="font-weight:bold;">


                                                    <a href="@Url.Action("UpdateTestatorsIndex", "UpdateTestators", new { NestId = Convert.ToInt32(Session["uuid"]) })"><li style="color:black;">Testator></li></a>
                                                    <a href="@Url.Action("AddTestatorFamilyIndex", "AddTestatorFamily")"><li style="color:black;">Testator Family ></li></a>
                                                    <a href="@Url.Action("AddBeneficiaryInstituteIndex","AddBeneficiaryInstitute")">
                                                        <li style="color:;">Institution ></li>
                                                    </a>
                                                    <a href="@Url.Action("AddBeneficiaryIndex", "AddBeneficiary")"><li style="color:#e1e1e1;">Beneficiary ></li></a>
                                                    <a href="@Url.Action("AddMainAssetsIndex", "AddMainAssets")"><li style="color:#e1e1e1">AssetInformation ></li></a>
                                                    <a href="@Url.Action("AddLiabilitiesIndex", "AddLiabilities")"><li style="color:#e1e1e1;">Liabilites></li></a>
                                                    <a href="@Url.Action("AddPetCareIndex", "AddPetCare")"><li style="color:#e1e1e1">PetCare ></li></a>
                                                    <a href="@Url.Action("AddAssetMappingIndex", "AddAssetMapping")"><li style="color:#e1e1e1">Mapping ></li></a>

                                                    <li style="color:#e1e1e1">Executor > </li>
                                                    <li style="color:#e1e1e1">Witness > </li>
                                                    <li style="color:#e1e1e1">Document</li>


                                                </ul>
                                            </h5>
                                        }

                                    }
                                }
                                else
                                {

                                    if (!Response.IsRequestBeingRedirected)
                                    {
                                        Response.Redirect("/LoginPage/LoginPageIndex");
                                    }
                                }
                            }
                        }
                        else
                        {

                            if (!Response.IsRequestBeingRedirected)
                            {
                                Response.Redirect("/LoginPage/LoginPageIndex");
                            }
                        }




                        <br />


                        <div class="row">


                            <div class="col-sm-5" id="btneditmsg" style="display:none;"> <div class="card-title text-primary"> <h6 style="color:darkred">( You Can Now Update Institution Details )</h6></div></div>
                        </div>

                        <div style="float:right;">

                            <input type="button" style="display:;" id="btnmore" name="name" value="Add More" class="btn btn-danger" />&nbsp;&nbsp;<a href="@Url.Action("EditBeneficiaryInstitutionIndex","EditBeneficiaryInstitution")"><input type="button" id="btnview" style="display:;" name="name" value="View" class="btn btn-success" /></a>
                        </div>

                        @using (Html.BeginForm("InsertNomineeData", null, FormMethod.Post, new { id = "BeneficiaryInstituteForm" }))
                        {

                            @Html.HiddenFor(m => m.BiId)

                            <div class="row">
                                <div class="col-sm-1"></div><div class='col-sm-2'><label for='input-1' style="line-height:40px;"><i class="fa fa-user-circle-o  " aria-hidden="true"></i>Testator</label></div>
                                <div class='col-sm-3'>

                                    <input type="text" readonly="true" name="ddltestatorname" class="form-control" value="@Session["disttestator"].ToString()" />
                                    <input type="hidden" id="tid" name="ddltid" value="@Session["distid"].ToString()" />





                                </div>
                                <div class="col-sm-6"><button type="button" style="display:none;" id="btnfieldedit" class="btn btn-primary shadow-primary px-5">Enable Details</button><button type="button" style="display:none;" id="btnfieldedit1" class="btn btn-primary shadow-primary px-5">Disable Details</button></div>

                            </div>

                            <hr class="div_rd">


                            <div class="row">
                                <div class="col-sm-1"></div>
                                <div class="col-sm-2"> <label for="input-1"><i class="fa fa-user-circle-o  " aria-hidden="true"></i>Institute Details</label></div>


                                <div class="col-sm-3">





                                    <div class="form-group">
                                        <label for="input-1">Name Of Institute</label>

                                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control input-shadow validate[required] text-input", @id = "txtfirstname", @placeholder = "First Name", @autocomplete = "off", alert = "LabourCost is requried" })


                                    </div>
                                </div>


                                <div class="col-sm-3">

                                    <div class="form-group">

                                        <label for="input-1">Type</label>
                                        @Html.DropDownListFor(x => x.TypeText, new SelectListItem[]{
                                        new SelectListItem() {Text = "--Select--", Value=""},
                                        new SelectListItem() {Text = "LLP", Value="LLP"},
                                        new SelectListItem() {Text = "Company", Value="Company"},
                                        new SelectListItem() {Text = "NGO", Value="NGO"},
                                        new SelectListItem() {Text = "Association", Value="Association"},
                                        new SelectListItem() {Text = "HUF", Value="HUF"},
                                        new SelectListItem() {Text = "Association of Person", Value="Association of Person"},
                                        new SelectListItem() {Text = "Society", Value="Society"}}, new { @class = "form-control input-shadow validate[required]" })

                                    </div>
                                </div>


                                <div class="col-sm-3">

                                    <div class="form-group">

                                        <label for="input-1">Registration No</label>
                                        @if (Model.RegistrationNo != 0)
                                        {
                                            @Html.TextBoxFor(m => m.RegistrationNo, new { @class = "form-control input-shadow validate[custom[onlyNumberSp]]  text-input", @id = "txtmiddlename", @placeholder = "Registration No", @autocomplete = "off", alert = "LabourCost is requried" })
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control input-shadow validate[custom[onlyNumberSp]] text-input" name="RegistrationNo" />
                                        }

                                    </div>
                                </div>













                            </div>
                            <hr />

                            <div class="row">
                                <div class="col-sm-1"></div>
                                <div class="col-sm-2"> <label for="input-1"><i class="fa fa-map-marker" aria-hidden="true"></i>Contact Details</label></div>











                                <div class="col-sm-3">

                                    <div class="form-group">

                                        <label for="input-1">Address</label>
                                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control input-shadow validate[required] text-input", @id = "txtaddress1", @placeholder = "Enter Address ", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>

                                @if (Model.StateText != null)
                                {
                                    <div class="col-sm-3">

                                        <div class="form-group">

                                            <label for="input-1">State</label>
                                            <select id="ddlstate" class="form-control input-shadow validate[required]">
                                                <option value="@Model.StateText">@Model.StateText</option>
                                            </select>
                                            @Html.HiddenFor(m => m.StateId, new { id = "stateid" })
                                            @Html.HiddenFor(m => m.StateText, new { id = "statetext" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm-3">

                                        <div class="form-group">

                                            <label for="input-1">State</label>
                                            <select id="ddlstate" class="form-control input-shadow validate[required]">
                                                <option value="">--Select State--</option>
                                            </select>
                                            @Html.HiddenFor(m => m.StateId, new { id = "stateid" })
                                            @Html.HiddenFor(m => m.StateText, new { id = "statetext" })
                                        </div>
                                    </div>
                                }




                                @if (Model.CityText != null)
                                {
                                    <div class="col-sm-3">

                                        <div class="form-group">
                                            <label for="input-1">City</label>
                                            <select id="ddlcity" class="form-control input-shadow validate[required]">
                                                <option value="@Model.CityText">@Model.CityText</option>
                                            </select>
                                            @Html.HiddenFor(m => m.CityId, new { id = "cityid" })
                                            @Html.HiddenFor(m => m.CityText, new { id = "citytext" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm-3">

                                        <div class="form-group">
                                            <label for="input-1">City</label>
                                            <select id="ddlcity" class="form-control input-shadow validate[required]">
                                                <option value="">--Select City--</option>
                                            </select>
                                            @Html.HiddenFor(m => m.CityId, new { id = "cityid" })
                                            @Html.HiddenFor(m => m.CityText, new { id = "citytext" })
                                        </div>
                                    </div>
                                }

























                            </div>


                            <hr />


                            @Html.HiddenFor(m => m.altchek, new { @id = "txtcheck" })
                            @*<center>
                <div class="col-sm-6" id="showcompany">

                    <div class="form-group">

                        <br />
                        <p>Alternate Beneficiary Institution</p>
                        <label class="checkbox-inline">
                            <input type="checkbox" value="Yes" class="altradio validate[required] altone" name="radio1">Yes
                        </label>
                        <label class="checkbox-inline">
                            <input type="checkbox" value="No" class="altradio validate[required] alttwo" name="radio1">No
                        </label>



                    </div>
                </div>
            </center>*@










                            @*<div id="altinstitution" style="display:none;">


                @Html.HiddenFor(m => m.altBiId)



                <hr class="div_rd">


                <div class="row">
                    <div class="col-sm-1"></div>
                    <div class="col-sm-2"> <label for="input-1"><i class="fa fa-user-circle-o  " aria-hidden="true"></i>Institute Details</label></div>


                    <div class="col-sm-3">





                        <div class="form-group">
                            <label for="input-1">Name Of Institute</label>

                            @Html.TextBoxFor(m => m.altFirstName, new { @class = "form-control input-shadow validate[required] text-input", @id = "alttxtfirstname", @placeholder = "First Name", @autocomplete = "off", alert = "LabourCost is requried" })


                        </div>
                    </div>


                    <div class="col-sm-3">

                        <div class="form-group">

                            <label for="input-1">Type</label>
                            @Html.DropDownListFor(x => x.altTypeText, new SelectListItem[]{
                            new SelectListItem() {Text = "--Select--", Value=""},
                            new SelectListItem() {Text = "LLP", Value="LLP"},
                            new SelectListItem() {Text = "Company", Value="Company"},
                            new SelectListItem() {Text = "NGO", Value="NGO"},
                            new SelectListItem() {Text = "Association", Value="Association"},
                            new SelectListItem() {Text = "HUF", Value="HUF"},
                            new SelectListItem() {Text = "Association of Person", Value="Association of Person"},
                            new SelectListItem() {Text = "Society", Value="Society"}}, new { @class = "form-control input-shadow validate[required]" })

                        </div>
                    </div>


                    <div class="col-sm-3">

                        <div class="form-group">

                            <label for="input-1">Registration No</label>


                            @if (Model.altRegistrationNo != 0)
                            {
                                @Html.TextBoxFor(m => m.altRegistrationNo, new { @class = "form-control input-shadow validate[custom[onlyNumberSp]] text-input", @id = "txtmiddlename", @placeholder = "Registration No", @autocomplete = "off", alert = "LabourCost is requried" })
                            }
                            else
                            {
                                <input type="text" name="altRegistrationNo" value="" class="form-control input-shadow validate[custom[onlyNumberSp]] text-input" />
                            }






                        </div>
                    </div>













                </div>
                <hr />

                <div class="row">
                    <div class="col-sm-1"></div>
                    <div class="col-sm-2"> <label for="input-1"><i class="fa fa-map-marker" aria-hidden="true"></i>Contact Details</label></div>











                    <div class="col-sm-3">

                        <div class="form-group">

                            <label for="input-1">Address</label>
                            @Html.TextAreaFor(m => m.altAddress, new { @class = "form-control input-shadow validate[required] text-input", @id = "alttxtaddress1", @placeholder = "Enter Address ", @autocomplete = "off", alert = "LabourCost is requried" })
                        </div>
                    </div>

                    @if (Model.altStateText != null)
                    {
                        <div class="col-sm-3">

                            <div class="form-group">

                                <label for="input-1">State</label>
                                <select id="altddlstate" class="form-control input-shadow validate[required]">
                                    <option value="@Model.altStateText">@Model.altStateText</option>
                                </select>
                                @Html.HiddenFor(m => m.altStateId, new { id = "altStateId" })
                                @Html.HiddenFor(m => m.altStateText, new { id = "altStateText" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-3">

                            <div class="form-group">

                                <label for="input-1">State</label>
                                <select id="altddlstate" class="form-control input-shadow validate[required]">
                                    <option value="">--Select State--</option>
                                </select>
                                @Html.HiddenFor(m => m.altStateId, new { id = "altStateId" })
                                @Html.HiddenFor(m => m.altStateText, new { id = "altStateText" })
                            </div>
                        </div>
                    }




                    @if (Model.altCityText != null)
                    {
                        <div class="col-sm-3">

                            <div class="form-group">
                                <label for="input-1">City</label>
                                <select id="altddlcity" class="form-control input-shadow validate[required]">
                                    <option value="@Model.altCityText">@Model.altCityText</option>
                                </select>
                                @Html.HiddenFor(m => m.altCityId, new { id = "altCityId" })
                                @Html.HiddenFor(m => m.altCityText, new { id = "altCityText" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-3">

                            <div class="form-group">
                                <label for="input-1">City</label>
                                <select id="altddlcity" class="form-control input-shadow validate[required]">
                                    <option value="">--Select City--</option>
                                </select>
                                @Html.HiddenFor(m => m.altCityId, new { id = "altCityId" })
                                @Html.HiddenFor(m => m.altCityText, new { id = "altCityText" })
                            </div>
                        </div>
                    }

























                </div>






            </div>*@












                            <div class="form-group" style="float:right">

                                <button type="submit" id="btnnomineeformsubmit" formaction="InsertBeneficiaryInstitute" class="btn btn-primary shadow-primary px-5"><i class="icon-lock"></i>Submit</button>
                                <button type="submit" id="btnupdate" style="display:none;" formaction="@Url.Action("UpdateBeneficiaryInstitute","AddBeneficiaryInstitute")" class="btn btn-success shadow-primary px-5"><i class="icon-lock"></i>Update</button>
                                <input type="button" style="display:none;" id="btnmore2" name="name" value="Add More" class="btn btn-danger" />
                                <a href="@Url.Action("AddBeneficiaryIndex","AddBeneficiary")"><button type="button" id="btnnext" style="display:" class="btn btn-success shadow-primary px-5">Skip&nbsp;&nbsp;<i class="icon-arrow-right-circle"></i></button></a>
                            </div>
                        }

                        <button type="button" id="btntestatorfamilysubmitSUCCESS" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
                        <button type="button" id="btnnomineeinsertsuccess" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
                        <button type="button" id="btnnomineelinking" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
                        <button type="button" id="btncheckExists" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
                        @*<button type="button" style="display:none" id="confirmtestatorfamily"></button>*@

                        <script>
                        $(document).ready(function () {


                            $("#BeneficiaryInstituteForm").validationEngine();



            $.ajax({

                type: "POST",
                url:"@Url.Action("BindStateDDL", "AddBeneficiaryInstitute")",
                success: function (data) {
                    $('#ddlstate').append(data);
                }
              });



      $.ajax({

                type: "POST",
                url:"@Url.Action("altBindStateDDL", "AddBeneficiaryInstitute")",
                success: function (data) {
                    $('#altddlstate').append(data);
                }
              });



        });



    $("#ddlstate").change(function () {
        var value = $(this).children(":selected").attr("value");
        var text = $("#ddlstate option:selected").html();

        $("#statetext").val(text);
        $("#stateid").val(value);



        $.ajax({

            type: "POST",
            url: "@Url.Action("OnChangeBindCity", "AddBeneficiaryInstitute")",
            data: { "send": "" + value+  ""},
            success: function (data) {

                $('#ddlcity').empty().append(data);
            }



        });





                        });



                        $("#ddlcity").change(function () {
                            var value = $(this).children(":selected").attr("value");
                            var text = $("#ddlcity option:selected").html();

                            $("#citytext").val(text);
                            $("#cityid").val(value);
                        });
                        </script>




                        @if (ViewBag.Message == "Verified")
                        {
                            <script>

                                $(document).ready(function () {


                                    $("#btntestatorfamilysubmitSUCCESS").on("click", function () { });

                                    $("#btntestatorfamilysubmitSUCCESS").click(); //trigger event after listening to it.




                                });
                            </script>

                        }





                        @if (ViewBag.disablefield == "true")
                        {
                            <script>

                                $("#btnmore").show();
                                $("#btnmore2").show();

                                $("#btnfieldedit").show();

                                $("#btnnomineeformsubmit").hide();

                                $("#btnnext").show();



                                $("#btnmore").show();
                                $("#btnview").show();

                                $(document).ready(function () {



                                    $("#txtfirstname").attr("disabled", "disabled");
                                    $("#TypeText").attr("disabled", "disabled");
                                    $("#txtmiddlename").attr("disabled", "disabled");
                                    $("#txtaddress1").attr("disabled", "disabled");
                                    $("#ddlstate").attr("disabled", "disabled");
                                    $("#ddlcity").attr("disabled", "disabled");


                                    $("#alttxtfirstname").attr("disabled", "disabled");
                                    $("#altTypeText").attr("disabled", "disabled");
                                    $("#alttxtmiddlename").attr("disabled", "disabled");
                                    $("#alttxtaddress1").attr("disabled", "disabled");
                                    $("#altddlstate").attr("disabled", "disabled");
                                    $("#altddlcity").attr("disabled", "disabled");


                                });


                            </script>
                        }




                        <script>


                            $("#btnfieldedit").click(function () {


                                $("#btnfieldedit1").show();
                                $("#btnfieldedit").hide();

                                $("#btnupdate").show();


                                $("#txtfirstname").removeAttr("disabled");
                                $("#TypeText").removeAttr("disabled");
                                $("#txtmiddlename").removeAttr("disabled");
                                $("#txtaddress1").removeAttr("disabled");
                                $("#ddlstate").removeAttr("disabled");
                                $("#ddlcity").removeAttr("disabled");




                                $("#alttxtfirstname").removeAttr("disabled");
                                $("#altTypeText").removeAttr("disabled");
                                $("#alttxtmiddlename").removeAttr("disabled");
                                $("#alttxtaddress1").removeAttr("disabled");
                                $("#altddlstate").removeAttr("disabled");
                                $("#altddlcity").removeAttr("disabled");





                                $("#btneditmsg").show();

                            });


                        </script>






                        <script>

                            $("#btnmore").click(function () {

                                $("#btnupdate").hide();

                                $("#btnnomineeformsubmit").show();

                                $("#altinstitution").hide();
                                $(".altone").prop('checked', false);


                                $("#btnfieldedit").hide();

                                $("#txtfirstname").removeAttr("disabled");
                                $("#TypeText").removeAttr("disabled");
                                $("#txtmiddlename").removeAttr("disabled");
                                $("#txtaddress1").removeAttr("disabled");
                                $("#ddlstate").removeAttr("disabled");
                                $("#ddlcity").removeAttr("disabled");




                                $("#alttxtfirstname").removeAttr("disabled");
                                $("#altTypeText").removeAttr("disabled");
                                $("#alttxtmiddlename").removeAttr("disabled");
                                $("#alttxtaddress1").removeAttr("disabled");
                                $("#altddlstate").removeAttr("disabled");
                                $("#altddlcity").removeAttr("disabled");






                                $("#txtfirstname").val("");
                                $("#TypeText").val("");
                                $("#txtmiddlename").val("");
                                $("#txtaddress1").val("");




                                $("#alttxtfirstname").val("");
                                $("#altTypeText").val("");
                                $("#alttxtmiddlename").val("");
                                $("#alttxtaddress1").val("");




                            });

                            $("#btnmore2").click(function () {

                                $("#btnupdate").hide();

                                $("#btnnomineeformsubmit").show();



                                $("#btnfieldedit").hide();

                                $("#altinstitution").hide();
                                $(".altone").prop('checked', false);


                                $("#txtfirstname").removeAttr("disabled");
                                $("#TypeText").removeAttr("disabled");
                                $("#txtmiddlename").removeAttr("disabled");
                                $("#txtaddress1").removeAttr("disabled");
                                $("#ddlstate").removeAttr("disabled");
                                $("#ddlcity").removeAttr("disabled");




                                $("#alttxtfirstname").removeAttr("disabled");
                                $("#altTypeText").removeAttr("disabled");
                                $("#alttxtmiddlename").removeAttr("disabled");
                                $("#alttxtaddress1").removeAttr("disabled");
                                $("#altddlstate").removeAttr("disabled");
                                $("#altddlcity").removeAttr("disabled");




                                $("#txtfirstname").val("");
                                $("#TypeText").val("");
                                $("#txtmiddlename").val("");
                                $("#txtaddress1").val("");

                                $("#alttxtfirstname").val("");
                                $("#altTypeText").val("");
                                $("#alttxtmiddlename").val("");
                                $("#alttxtaddress1").val("");




                            });




                            $('.altradio').on('change', function () {

                                $('.altradio').not(this).prop('checked', false);
                                var val = $("input[name=radio1]:checked").val()

                                if (val == "Yes") {

                                    $("#showcompany").removeAttr("style");
                                    $("#altinstitution").removeAttr("style");
                                    $("#txtcheck").val("true");

                                }

                                if (val == "No") {

                                    $("#altinstitution").css("display", "none");
                                    $("#txtcheck").val("false");

                                }


                            });




                        $("#altddlstate").change(function () {
                        var value = $(this).children(":selected").attr("value");
                        var text = $("#altddlstate option:selected").html();

                            $("#altStateText").val(text);
                            $("#altStateId").val(value);



                        $.ajax({

                        type: "POST",
                        url: "@Url.Action("altOnChangeBindCity", "AddBeneficiaryInstitute")",
                        data: { "send": "" + value+  ""},
                        success: function (data) {

                        $('#altddlcity').empty().append(data);
                        }



                        });





                        });



                        $("#altddlcity").change(function () {
                        var value = $(this).children(":selected").attr("value");
                        var text = $("#altddlcity option:selected").html();

                            $("#altCityText").val(text);
                            $("#altCityId").val(value);


                        });



                        </script>


                        @if (ViewBag.alternate == "true")
                        {
                            <script>
                                $(document).ready(function () {
                                    $(".altone").prop('checked', true);
                                    $("#altinstitution").show();
                                });


                            </script>
                        }



