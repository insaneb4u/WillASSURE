@model WillAssure.Models.TestatorFamilyModel
@{
    ViewBag.Title = "AddTestatorFamilyPageContent";
}


<style>
    ul#menu li {
        display: inline;
    }
</style>

@*Main Content*@
<div class="content-wrapper">
    <div class="container-fluid">

        <div class="row pt-2 pb-2">

            <div class="col-sm-3">
                <div class="btn-group float-sm-right">

                    <div class="dropdown-menu">
                        <a href="javaScript:void();" class="dropdown-item">Action</a>
                        <a href="javaScript:void();" class="dropdown-item">Another action</a>
                        <a href="javaScript:void();" class="dropdown-item">Something else here</a>
                        <div class="dropdown-divider"></div>
                        <a href="javaScript:void();" class="dropdown-item">Separated link</a>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Breadcrumb-->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <h5>
                            <ul id="menu" style="font-weight:bold;">

                                <li>Testator ></li>
                                <li style="color:#5e72e4">Testator Family ></li>
                                <li style="color:#e1e1e1">Beneficiary ></li>
                                <li style="color:#e1e1e1">AssetInformation ></li>
                                <li style="color:#e1e1e1">Mapping ></li>
                                <li style="color:#e1e1e1"> Nominee ></li>
                                <li style="color:#e1e1e1">Appointees </li>


                            </ul>
                        </h5>
                        <br />
                        <div class="card-title text-primary">Add Family</div>


                        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "FamilyForm" }))
                        {
                            <div class="row">
                                <div class='col-sm-1'><label for='input-1' style="line-height:40px;">Testator</label></div>
                                <div class="col-sm-3">
                                    <select id='DDLTestator' onchange="getDDLTestator(this.value)" name="contentList" class='form-control validate[required]'></select>







                                </div>
                                <div class="col-sm-2">
                                    <label class="checkbox-inline">
                                        <input type="checkbox" value="Yes" class="radio" name="radio">Add Multiple
                                    </label>
                                </div>
                            </div>
                            <hr>
                            <input type="hidden" id="txtcheck" value="" name="name" />

                            @Html.HiddenFor(m => m.ddltid, new { id = "ddltid" })
                            @Html.HiddenFor(m => m.ddltestatorname, new { id = "ddltestatorname" })


                            <div class="row">
                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">First Name</label>

                                        @Html.TextBoxFor(m => m.First_Name, new { @class = "form-control validate[required] text-input", @id = "txtFirstName", @placeholder = "Enter First Name", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>



                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Last Name</label>

                                        @Html.TextBoxFor(m => m.Last_Name, new { @class = "form-control validate[required] text-input", @id = "txtLastName", @placeholder = "Enter Last Name", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>



                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Middle Name</label>

                                        @Html.TextBoxFor(m => m.Middle_Name, new { @class = "form-control validate[required] text-input", @id = "txtMiddle_Name", @placeholder = "Enter Middle Name", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>



                                <div class="col-sm-3">

                                    <div class="form-group">
                                        <label for="input-1">Date Of Birth</label>

                                        <div id="datepicker" class="input-group date" data-date-format="dd-mm-yyyy">
                                            <input class="form-control validate[required]" type="text" id="DOB" name="DOB" autocomplete="off" placeholder="Select Date Of Birth" />
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Marital Status</label>
                                        @Html.DropDownListFor(x => x.Marital_Status, new SelectListItem[]{
                                        new SelectListItem() {Text = "--Select--", Value=""},
                                       new SelectListItem() {Text = "Married", Value="Married"},
                                       new SelectListItem() {Text = "UnMarried", Value="Married"}}, new { @class = "form-control validate[required]" , @id="ddlmaritalstatus" })


                                    </div>
                                </div>



                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Religion</label>
                                        @Html.DropDownListFor(x => x.Religion, new SelectListItem[]{
                                 new SelectListItem() {Text = "--Select--", Value=""},
                                 new SelectListItem() {Text = "Buddhism", Value="Buddhism"},
                                 new SelectListItem() {Text = "Christians", Value="Christians"},
                                 new SelectListItem() {Text = "Hinduism", Value="Hinduism"},
                                 new SelectListItem() {Text = "Islam", Value="Islam"},
                                 new SelectListItem() {Text = "Jainism", Value="Jainism"},
                                 new SelectListItem() {Text = "Sikhism", Value="Sikhism"},
                                 new SelectListItem() {Text = "Zoroastrian", Value="Zoroastrian"},
                                 new SelectListItem() {Text = "Guru Nanak Dev", Value="Guru Nanak Dev"},
                                 new SelectListItem() {Text = "Lord Mahavira", Value="Lord Mahavira"},
                                 new SelectListItem() {Text = "Adi Shankaracharya", Value="Adi Shankaracharya"}}, new { @class = "form-control validate[required]" , @id="ddlreligion" })



                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Relationship</label>
                                        <select id="ddlrelation" class="form-control validate[required]">
                                            <option value="">--Select--</option>
                                        </select>
                                        @Html.HiddenFor(m => m.RelationshipId, new { id = "relationid" })
                                        @Html.HiddenFor(m => m.RelationshipTxt, new { id = "relationtext" })
                                    </div>
                                </div>



                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Address1</label>

                                        @Html.TextAreaFor(m => m.Address1, new { @class = "form-control validate[required] text-input", @id = "txtAddress1", @placeholder = "Enter Address1", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>



                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Address2</label>

                                        @Html.TextAreaFor(m => m.Address2, new { @class = "form-control text-input", @id = "txtAddress2", @placeholder = "Enter Address2", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>



                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Address3</label>

                                        @Html.TextAreaFor(m => m.Address3, new { @class = "form-control  text-input", @id = "txtAddress3", @placeholder = "Enter Address3", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>


                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">State</label>

                                        <select id="ddlstate" class="form-control validate[required]">
                                            <option value="">--Select State--</option>
                                        </select>
                                        @Html.HiddenFor(m => m.State_id, new { id = "stateid" })
                                        @Html.HiddenFor(m => m.State_txt, new { id = "statetext" })
                                    </div>
                                </div>


                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">City</label>
                                        <select id="ddlcity" class="form-control validate[required]">
                                            <option value="">--Select City--</option>
                                        </select>
                                        @Html.HiddenFor(m => m.City_id, new { id = "cityid" })
                                        @Html.HiddenFor(m => m.City_txt, new { id = "citytext" })

                                    </div>

                                </div>


                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Pin</label>
                                        @Html.TextBoxFor(m => m.Pin, new { @class = "form-control validate[required,custom[PinCode]] text-input", @id = "txtPin", @placeholder = "Enter Pin", @autocomplete = "off" })
                                    </div>
                                </div>


                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-3">Status</label>
                                        @Html.DropDownListFor(x => x.active, new SelectListItem[]{
                                       new SelectListItem() {Text = "--Select--", Value=""},
                                       new SelectListItem() {Text = "Active", Value="Active"},
                                       new SelectListItem() {Text = "Inactive", Value="2"}}, new { @class = "form-control validate[required]" })
                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Identity Proof</label>
                                        @Html.DropDownListFor(x => x.Identity_Proof, new SelectListItem[]{
                                   new SelectListItem() {Text = "--Select Identity Proof--", Value=""},
                                   new SelectListItem() {Text = "Aadhaar Card", Value="Aadhaar Card"},
                                   new SelectListItem() {Text = "Passport", Value="Passport"},
                                   new SelectListItem() {Text = "Driving Licences", Value="Driving Licences"},
                                   new SelectListItem() {Text = "Pan Card", Value="Pan Card"}} , new { @class= "form-control validate[required]", @id="ddlidentityproof" , @onchange= "getIdentityselection(this.options[this.selectedIndex].innerHTML)" })


                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Identity Proof Number</label>
                                        <div id="appendtxt">  </div>

                                        @*@Html.TextBoxFor(m => m.Identity_Proof_Value, new { @class = "form-control validate[required] text-input", @id = "txtIdentityProofValue", @placeholder = "Enter Identity Proof Value", @autocomplete = "off" })*@
                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Alt Identity Proof</label>
                                        @Html.DropDownListFor(x => x.Identity_Proof, new SelectListItem[]{
                                   new SelectListItem() {Text = "--Select Identity Proof--", Value=""},
                                   new SelectListItem() {Text = "Aadhaar Card", Value="1"},
                                   new SelectListItem() {Text = "Passport", Value="2"},
                                   new SelectListItem() {Text = "Driving Licences", Value="3"},
                                   new SelectListItem() {Text = "Pan Card", Value="4"}} , new { @class= "form-control ", @id="ddlidentityproof" , @onchange= "getAltIdentityselection(this.options[this.selectedIndex].innerHTML)" })

                                        @Html.HiddenFor(m => m.Alt_Identity_Proof, new { id = "Alt_Identity_Proof" })
                                    </div>
                                </div>



                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="input-3">Alt Identity ProofNumber</label>
                                        <div id="appendtxt2">  </div>

                                        @*@Html.TextBoxFor(m => m.Identity_Proof_Value, new { @class = "form-control validate[required] text-input", @id = "txtIdentityProofValue", @placeholder = "Enter Identity Proof Value", @autocomplete = "off" })*@
                                    </div>
                                </div>


                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label for="input-1">Is Informed Person</label>

                                        @Html.TextBoxFor(m => m.Is_Informed_Person, new { @class = "form-control validate[required] text-input", @id = "txtRole", @placeholder = "Enter Is Informed Person", @autocomplete = "off", alert = "LabourCost is requried" })
                                    </div>
                                </div>








                            </div>



                            <div class="form-group">

                                <button type="submit" id="btntestatorsubmit" formaction="InsertTestatorFamilyFormData" class="btn btn-primary shadow-primary px-5"><i class="icon-lock"></i> Add Testator Family</button>
                            </div>

                        }
                    </div>
                </div>
            </div>
            <button type="button" id="btntestatorfamilysubmitSUCCESS" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
            <button type="button" id="testatorfamilylinkcheck" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>
            <button type="button" id="btncheckExists" style="display:none;" class="btnpopup btn btn-primary shadow-primary px-5"><i class="icon-lock"></i></button>

        </div>


    </div>


</div>
@*end*@

<!--Start Back To Top Button-->
<a href="javaScript:void();" class="back-to-top"><i class="fa fa-angle-double-up"></i> </a>
<!--End Back To Top Button-->




<script>
    $(document).ready(function () {
        $("#FamilyForm").validationEngine();
    });





    $("#ddlstate").change(function () {
        var value = $(this).children(":selected").attr("value");
        var text = $("#ddlstate option:selected").html();

        $("#statetext").val(text);
        $("#stateid").val(value);


        $.ajax({

            type: "POST",
            url: "@Url.Action("OnChangeBindCity", "AddTestatorFamily")",
            data: { "send": "" + value+  ""},
            success: function (data) {

                $('#ddlcity').append(data);
            }



        });



    });


    $("#ddlcity").change(function () {
        var value = $(this).children(":selected").attr("value");
        var text = $("#ddlcity option:selected").html();

        $("#citytext").val(text);
        $("#cityid").val(value);
    });

    $(document).ready(function () {

        $.ajax({

            type: "POST",
            url:"@Url.Action("BindStateDDL", "AddTestatorFamily")",
            success: function (data) {
                $('#ddlstate').append(data);
            }
        });


    });




    $("#ddlrelation").change(function () {
        var value = $(this).children(":selected").attr("value");
        var text = $("#ddlrelation option:selected").html();

        $("#relationtext").val(text);
        $("#relationid").val(value);


    });



      $(document).ready(function () {

        $.ajax({

            type: "POST",
            url:"@Url.Action("BindRelationDDL", "AddTestatorFamily")",
            success: function (data) {
                $('#ddlrelation').append(data);
            }
          });




              $.ajax({

            type: "POST",
            url:"@Url.Action("BindTestatorDDL", "AddTestatorFamily")",
                  success: function (data) {

                      $('#DDLTestator').append(data);
                      



                
            }
          });


         


    });



</script>



@if (ViewBag.Message == "link")
{
    <script>

        $(document).ready(function () {


            $("#testatorfamilylinkcheck").on("click", function () { });

            $("#testatorfamilylinkcheck").click(); //trigger event after listening to it.




        });
    </script>

}




@if (ViewBag.Message == "Duplicate")
{
    <script>

        $(document).ready(function () {


            $("#btnRoleformsubmitCHECK").on("click", function () { });

            $("#btnRoleformsubmitCHECK").click(); //trigger event after listening to it.




        });
    </script>

}


@if (ViewBag.Message == "Verified")
{
    <script>

        $(document).ready(function () {


            $("#btntestatorfamilysubmitSUCCESS").on("click", function () { });

            $("#btntestatorfamilysubmitSUCCESS").click(); //trigger event after listening to it.




        });
    </script>

}





@*validation script*@
<script>
    function getIdentityselection(id) {

        $("#Identity_Proof_txt").val(id);


        if (id == "Aadhaar Card") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[adharCard]] text-input' id='Identity_Proof_Value' name='Identity_Proof_Value' placeholder='Enter Aadhaar Card' autocomplete='off'  />");
        }


        if (id == "Passport") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[Passport]] text-input' id='Identity_Proof_Value' name='Identity_Proof_Value'  placeholder='Enter Passport Number' autocomplete='off'  />");
        }



        if (id == "Driving Licences") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[carnumber]] text-input' id='Identity_Proof_Value' name='Identity_Proof_Value' placeholder='Enter Driving Licences' autocomplete='off'  />");
        }



        if (id == "Pan Card") {
            $("#appendtxt").empty().append("<input type='text' class='form-control validate[required,custom[pannumber]] text-input' id='Identity_Proof_Value' name='Identity_Proof_Value' placeholder='Enter Pan Card' autocomplete='off'  />");
        }


    }
</script>


<script>
    function getAltIdentityselection(id) {

        $("#Alt_Identity_Proof").val(id);


        if (id == "Aadhaar Card") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[adharCard]] text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value' placeholder='Enter Aadhaar Card' autocomplete='off'  />");
        }


        if (id == "Passport") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[Passport]] text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value'  placeholder='Enter Passport Number' autocomplete='off'  />");
        }



        if (id == "Driving Licences") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[carnumber]] text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value' placeholder='Enter Driving Licences' autocomplete='off'  />");
        }



        if (id == "Pan Card") {
            $("#appendtxt2").empty().append("<input type='text' class='form-control validate[custom[pannumber]] text-input' id='Alt_Identity_proof_Value' name='Alt_Identity_proof_Value' placeholder='Enter Pan Card' autocomplete='off'  />");
        }


    }



    $('.radio').on('change', function () {
        if (!$(this).is(':checked')) {
            $('.radio').prop('checked', false);
            $("#txtcheck").val("false");
           
        } else {
            $('.radio').prop('checked', true);
            $("#txtcheck").val("true");
        }
    }); 






      function getDDLTestator(value) {
        //var value = $(this).children(":selected").attr("value");
        var text = $("#DDLTestator option:selected").html();





        $("#ddltestatorname").val(text);
        $("#ddltid").val(value);
        var checkstatus =  $("#txtcheck").val();

             $.ajax({

            type: "POST",
            url:"@Url.Action("CheckTestatorUsers", "AddTestatorFamily")",
                 data: { value: value, checkstatus: checkstatus },
            success: function (data) {
                
                if (data == 2) {
                    
                    $("#btncheckExists").on("click", function () { });

                    $("#btncheckExists").click(); //trigger event after listening to it.


                    setTimeout(function () {
                        var url = "/AddBeneficiary/AddBeneficiaryIndex/";
                        window.location.href = url;
                    }, 2000);
                    //var url = "/AddBeneficiary/AddBeneficiaryIndex/";
                    //window.location.href = url;
                }

              
                      



                
            }
        });





    };

   



</script>




@*end*@